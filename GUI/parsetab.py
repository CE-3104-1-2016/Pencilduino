
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A10AFF0B0A5FA7F56971077821E6AA97'
    
_lr_action_items = {'NUMBER':([30,31,39,51,63,67,69,84,85,87,88,89,96,97,101,108,111,117,118,159,],[58,58,58,58,58,87,94,58,58,87,87,117,58,58,58,58,58,87,87,165,]),'ID':([13,17,18,27,30,31,36,38,39,47,50,51,63,67,78,84,85,87,88,89,96,97,101,102,105,108,111,117,118,129,144,],[40,44,45,56,59,59,64,65,59,73,76,59,59,88,102,59,59,88,88,118,59,59,59,102,129,59,59,88,88,102,152,]),'$end':([0,1,4,5,7,8,10,14,15,16,19,22,23,24,25,26,29,32,34,35,37,41,42,43,49,52,53,54,55,68,82,109,110,114,120,125,126,137,138,147,148,164,179,195,],[-36,-36,-14,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,0,-10,-9,-5,-8,-13,-11,-6,-12,-7,-4,-1,-3,-2,-15,-26,-33,-34,-35,-16,-17,-32,-64,-18,-30,-31,-29,-28,-56,]),'FILL':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,160,164,166,167,168,170,171,172,173,174,175,177,178,179,195,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-15,-26,2,-33,-34,-35,-16,-17,-32,-64,-18,2,-30,-31,2,2,2,-29,2,2,2,2,2,2,2,2,2,2,2,-28,-56,]),'DIAGL':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,160,164,166,167,168,170,171,172,173,174,175,177,178,179,195,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-15,-26,3,-33,-34,-35,-16,-17,-32,-64,-18,3,-30,-31,3,3,3,-29,3,3,3,3,3,3,3,3,3,3,3,-28,-56,]),'START':([145,158,182,],[153,-37,-38,]),'INITIALIZE':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,160,164,166,167,168,170,171,172,173,174,175,177,178,179,195,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-15,-26,20,-33,-34,-35,-16,-17,-32,-64,-18,20,-30,-31,20,20,20,-29,20,20,20,20,20,20,20,20,20,20,20,-28,-56,]),'DECLARE':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,28,68,82,98,109,110,114,120,125,126,130,137,138,146,147,148,149,150,164,179,195,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-15,-26,17,-33,-34,-35,-16,-17,-32,144,-64,-18,17,-30,-31,17,17,-29,-28,-56,]),'RPAREN':([58,59,60,61,66,67,76,78,87,88,90,91,92,93,102,103,104,106,107,112,113,115,116,117,118,128,129,135,136,143,151,],[-25,-24,80,81,86,-36,100,-36,-36,-36,119,-57,-59,-58,-36,-53,-51,-52,130,133,134,-61,-60,-36,-36,-54,-36,-63,-62,-55,157,]),'UNTIL':([57,68,120,],[79,-15,-16,]),'DO':([58,59,131,],[-25,-24,146,]),'WHEN':([18,45,162,163,],[47,72,72,47,]),'REPEAT':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,160,164,166,167,168,170,171,172,173,174,175,177,178,179,195,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-15,-26,6,-33,-34,-35,-16,-17,-32,-64,-18,6,-30,-31,6,6,6,-29,6,6,6,6,6,6,6,6,6,6,6,-28,-56,]),'DOT':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,160,164,166,167,168,170,171,172,173,174,175,177,178,179,195,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-15,-26,21,-33,-34,-35,-16,-17,-32,-64,-18,21,-30,-31,21,21,21,-29,21,21,21,21,21,21,21,21,21,21,21,-28,-56,]),'FROM':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,160,164,166,167,168,170,171,172,173,174,175,177,178,179,195,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-15,-26,28,-33,-34,-35,-16,-17,-32,-64,-18,28,-30,-31,28,28,28,-29,28,28,28,28,28,28,28,28,28,28,28,-28,-56,]),'INCREASE':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,160,164,166,167,168,170,171,172,173,174,175,177,178,179,195,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-15,-26,9,-33,-34,-35,-16,-17,-32,-64,-18,9,-30,-31,9,9,9,-29,9,9,9,9,9,9,9,9,9,9,9,-28,-56,]),'LPAREN':([2,3,9,11,12,20,21,40,56,],[30,31,36,38,39,50,51,67,78,]),'INCASE':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,160,164,166,167,168,170,171,172,173,174,175,177,178,179,195,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-15,-26,18,-33,-34,-35,-16,-17,-32,-64,-18,18,-30,-31,18,18,18,-29,18,18,18,18,18,18,18,18,18,18,18,-28,-56,]),'COLON':([153,],[160,]),'END':([82,109,110,114,125,126,138,147,148,160,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,193,194,195,],[-26,-33,-34,-35,-17,-32,-18,-30,-31,-36,-29,-36,-36,-36,-50,-36,-36,-36,-36,-36,-36,192,-36,-36,-28,-43,-47,-48,-46,-42,-45,-49,-44,-41,-40,-39,-56,]),'THEN':([58,59,122,123,],[-25,-24,139,140,]),'COLOR':([142,],[151,]),'ENDFROM':([1,4,5,7,8,10,14,15,16,19,22,23,24,25,29,32,34,35,37,41,42,43,49,52,53,54,55,68,82,109,110,114,120,125,126,137,138,146,147,148,154,164,179,195,],[-36,-14,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-10,-9,-5,-8,-13,-11,-6,-12,-7,-4,-1,-3,-2,-15,-26,-33,-34,-35,-16,-17,-32,-64,-18,-36,-30,-31,161,-29,-28,-56,]),'DEFAULT':([44,152,],[69,159,]),'TOFIND':([1,4,5,6,7,8,10,14,15,16,19,22,23,24,25,29,32,33,34,35,37,41,42,43,49,52,53,54,55,68,82,109,110,114,120,125,126,137,138,147,148,164,179,195,],[-36,-14,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-10,-9,63,-5,-8,-13,-11,-6,-12,-7,-4,-1,-3,-2,-15,-26,-33,-34,-35,-16,-17,-32,-64,-18,-30,-31,-29,-28,-56,]),'ENDINCASE':([75,95,141,],[99,121,-23,]),'PROCEDURE':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,160,164,166,167,168,170,171,172,173,174,175,177,178,179,195,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-15,-26,27,-33,-34,-35,-16,-17,-32,-64,-18,27,-30,-31,27,27,27,-29,27,27,27,27,27,27,27,27,27,27,27,-28,-56,]),'DECREASE':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,160,164,166,167,168,170,171,172,173,174,175,177,178,179,195,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-15,-26,11,-33,-34,-35,-16,-17,-32,-64,-18,11,-30,-31,11,11,11,-29,11,11,11,11,11,11,11,11,11,11,11,-28,-56,]),'DIAGR':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,160,164,166,167,168,170,171,172,173,174,175,177,178,179,195,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-15,-26,12,-33,-34,-35,-16,-17,-32,-64,-18,12,-30,-31,12,12,12,-29,12,12,12,12,12,12,12,12,12,12,12,-28,-56,]),'CONDITION':([58,59,72,73,79,83,],[-25,-24,96,97,108,111,]),'CALL':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,68,82,98,109,110,114,120,125,126,137,138,146,147,148,149,150,164,179,195,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-15,-26,13,-33,-34,-35,-16,-17,-32,-64,-18,13,-30,-31,13,13,-29,-28,-56,]),'LBRACKET':([74,139,140,],[98,149,150,]),'IFNOT':([18,45,46,48,70,71,162,163,180,181,],[-36,-36,-20,74,-22,74,-36,-36,-21,-19,]),'RBRACKET':([1,4,5,7,8,10,14,15,16,19,22,23,24,25,29,32,34,35,37,41,42,43,49,52,53,54,55,68,82,98,109,110,114,120,124,125,126,137,138,147,148,149,150,155,156,164,179,195,],[-36,-14,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-10,-9,-5,-8,-13,-11,-6,-12,-7,-4,-1,-3,-2,-15,-26,-36,-33,-34,-35,-16,141,-17,-32,-64,-18,-30,-31,-36,-36,162,163,-29,-28,-56,]),'SEMICOLON':([44,58,59,62,80,81,86,94,99,100,119,121,132,133,134,152,157,161,165,192,],[68,-25,-24,82,109,110,114,120,125,126,137,138,-27,147,148,158,164,179,182,195,]),'COMMA':([58,59,64,65,67,77,78,87,88,102,117,118,127,129,],[-25,-24,84,85,89,101,105,89,89,105,89,89,142,105,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'diagonal_left':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,160,166,167,168,170,171,172,173,174,175,177,178,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,168,168,168,168,168,168,168,168,168,168,168,168,]),'diagonal_right':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,160,166,167,168,170,171,172,173,174,175,177,178,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,167,167,167,167,167,167,167,167,167,167,167,167,]),'initialize':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,160,166,167,168,170,171,172,173,174,175,177,178,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,166,166,166,166,166,166,166,166,166,166,166,166,]),'empty':([0,1,5,6,7,8,10,14,15,16,18,19,22,23,24,25,45,67,78,87,88,98,102,117,118,129,146,149,150,160,162,163,166,167,168,170,171,172,173,174,175,177,178,],[4,4,4,4,4,4,4,4,4,4,46,4,4,4,4,4,70,92,103,92,92,4,103,92,92,103,4,4,4,169,70,46,169,169,169,169,169,169,169,169,169,169,169,]),'oneParam':([78,102,129,],[104,104,104,]),'procedure':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,160,166,167,168,170,171,172,173,174,175,177,178,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,173,173,173,173,173,173,173,173,173,173,173,173,]),'decrease':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,160,166,167,168,170,171,172,173,174,175,177,178,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,170,170,170,170,170,170,170,170,170,170,170,170,]),'localDeclare':([130,],[145,]),'fill':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,160,166,167,168,170,171,172,173,174,175,177,178,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,174,174,174,174,174,174,174,174,174,174,174,174,]),'dot':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,160,166,167,168,170,171,172,173,174,175,177,178,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,171,171,171,171,171,171,171,171,171,171,171,171,]),'oneParam_call':([67,87,88,117,118,],[91,91,91,91,91,]),'increase':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,160,166,167,168,170,171,172,173,174,175,177,178,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,172,172,172,172,172,172,172,172,172,172,172,172,]),'since':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,160,166,167,168,170,171,172,173,174,175,177,178,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,175,175,175,175,175,175,175,175,175,175,175,175,]),'params_call':([67,87,88,117,118,],[90,115,116,135,136,]),'localExpression':([160,166,167,168,170,171,172,173,174,175,177,178,],[176,183,184,185,186,187,188,189,190,191,193,194,]),'call':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'declare':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,28,98,146,149,150,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,57,23,23,23,23,]),'ifnot':([48,71,],[75,95,]),'repeat':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,160,166,167,168,170,171,172,173,174,175,177,178,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,177,177,177,177,177,177,177,177,177,177,177,177,]),'sentence':([30,31,39,51,63,84,85,96,97,101,108,111,],[60,61,66,77,83,112,113,122,123,127,131,132,]),'inCase':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,160,166,167,168,170,171,172,173,174,175,177,178,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,178,178,178,178,178,178,178,178,178,178,178,178,]),'until_find':([33,],[62,]),'when2':([45,162,],[71,180,]),'moreParam_call':([67,87,88,117,118,],[93,93,93,93,93,]),'expression':([0,1,5,6,7,8,10,14,15,16,19,22,23,24,25,98,146,149,150,],[26,29,32,33,34,35,37,41,42,43,49,52,53,54,55,124,154,155,156,]),'moreParam':([78,102,129,],[106,106,106,]),'params':([78,102,129,],[107,128,143,]),'when1':([18,163,],[48,181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> declare expression','expression',2,'p_expression','yacc_Duino.py',40),
  ('expression -> inCase expression','expression',2,'p_expression','yacc_Duino.py',41),
  ('expression -> repeat expression','expression',2,'p_expression','yacc_Duino.py',42),
  ('expression -> since expression','expression',2,'p_expression','yacc_Duino.py',43),
  ('expression -> dot expression','expression',2,'p_expression','yacc_Duino.py',44),
  ('expression -> initialize expression','expression',2,'p_expression','yacc_Duino.py',45),
  ('expression -> fill expression','expression',2,'p_expression','yacc_Duino.py',46),
  ('expression -> increase expression','expression',2,'p_expression','yacc_Duino.py',47),
  ('expression -> decrease expression','expression',2,'p_expression','yacc_Duino.py',48),
  ('expression -> diagonal_right expression','expression',2,'p_expression','yacc_Duino.py',49),
  ('expression -> diagonal_left expression','expression',2,'p_expression','yacc_Duino.py',50),
  ('expression -> procedure expression','expression',2,'p_expression','yacc_Duino.py',51),
  ('expression -> call expression','expression',2,'p_expression','yacc_Duino.py',52),
  ('expression -> empty','expression',1,'p_expression','yacc_Duino.py',53),
  ('declare -> DECLARE ID SEMICOLON','declare',3,'p_declare','yacc_Duino.py',61),
  ('declare -> DECLARE ID DEFAULT NUMBER SEMICOLON','declare',5,'p_declare','yacc_Duino.py',62),
  ('inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON','inCase',5,'p_inCase','yacc_Duino.py',72),
  ('inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON','inCase',6,'p_inCase','yacc_Duino.py',73),
  ('when1 -> WHEN ID CONDITION sentence THEN LBRACKET expression RBRACKET when1','when1',9,'p_when1','yacc_Duino.py',83),
  ('when1 -> empty','when1',1,'p_when1','yacc_Duino.py',84),
  ('when2 -> WHEN CONDITION sentence THEN LBRACKET expression RBRACKET when2','when2',8,'p_when2','yacc_Duino.py',95),
  ('when2 -> empty','when2',1,'p_when2','yacc_Duino.py',96),
  ('ifnot -> IFNOT LBRACKET expression RBRACKET','ifnot',4,'p_ifnot','yacc_Duino.py',102),
  ('sentence -> ID','sentence',1,'p_sentence','yacc_Duino.py',108),
  ('sentence -> NUMBER','sentence',1,'p_sentence','yacc_Duino.py',109),
  ('repeat -> REPEAT expression until_find SEMICOLON','repeat',4,'p_repeat','yacc_Duino.py',120),
  ('until_find -> TOFIND sentence CONDITION sentence','until_find',4,'p_until_find','yacc_Duino.py',126),
  ('since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON','since',9,'p_since','yacc_Duino.py',131),
  ('dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON','dot',9,'p_dot','yacc_Duino.py',136),
  ('increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON','increase',7,'p_increase','yacc_Duino.py',140),
  ('decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON','decrease',7,'p_decrease','yacc_Duino.py',148),
  ('initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON','initialize',5,'p_initialize','yacc_Duino.py',156),
  ('fill -> FILL LPAREN sentence RPAREN SEMICOLON','fill',5,'p_fill','yacc_Duino.py',164),
  ('diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON','diagonal_left',5,'p_digonalleft','yacc_Duino.py',169),
  ('diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON','diagonal_right',5,'p_digonalright','yacc_Duino.py',174),
  ('empty -> <empty>','empty',0,'p_empty','yacc_Duino.py',179),
  ('localDeclare -> DECLARE ID SEMICOLON','localDeclare',3,'p_localDeclare','yacc_Duino.py',209),
  ('localDeclare -> DECLARE ID DEFAULT NUMBER SEMICOLON','localDeclare',5,'p_localDeclare','yacc_Duino.py',210),
  ('localExpression -> inCase localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',222),
  ('localExpression -> repeat localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',223),
  ('localExpression -> since localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',224),
  ('localExpression -> dot localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',225),
  ('localExpression -> initialize localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',226),
  ('localExpression -> fill localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',227),
  ('localExpression -> increase localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',228),
  ('localExpression -> decrease localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',229),
  ('localExpression -> diagonal_right localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',230),
  ('localExpression -> diagonal_left localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',231),
  ('localExpression -> procedure localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',232),
  ('localExpression -> empty','localExpression',1,'p_localExpression','yacc_Duino.py',233),
  ('params -> oneParam','params',1,'p_params','yacc_Duino.py',237),
  ('params -> moreParam','params',1,'p_params','yacc_Duino.py',238),
  ('params -> empty','params',1,'p_params','yacc_Duino.py',239),
  ('oneParam -> ID params','oneParam',2,'p_oneParam','yacc_Duino.py',242),
  ('moreParam -> COMMA ID params','moreParam',3,'p_moreParam','yacc_Duino.py',247),
  ('procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON','procedure',11,'p_procedure','yacc_Duino.py',253),
  ('params_call -> oneParam_call','params_call',1,'p_params_call','yacc_Duino.py',260),
  ('params_call -> moreParam_call','params_call',1,'p_params_call','yacc_Duino.py',261),
  ('params_call -> empty','params_call',1,'p_params_call','yacc_Duino.py',262),
  ('oneParam_call -> ID params_call','oneParam_call',2,'p_oneParam_call','yacc_Duino.py',265),
  ('oneParam_call -> NUMBER params_call','oneParam_call',2,'p_oneParam_call','yacc_Duino.py',266),
  ('moreParam_call -> COMMA ID params_call','moreParam_call',3,'p_moreParam_call','yacc_Duino.py',270),
  ('moreParam_call -> COMMA NUMBER params_call','moreParam_call',3,'p_moreParam_call','yacc_Duino.py',271),
  ('call -> CALL ID LPAREN params_call RPAREN SEMICOLON','call',6,'p_call','yacc_Duino.py',275),
]
