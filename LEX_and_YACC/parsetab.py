
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3BF0A2618C0568418138B024B7A54560'
    
_lr_action_items = {'START':([141,164,198,],[154,-41,-42,]),'IFNOT':([6,33,35,36,63,64,166,167,184,185,],[-40,-20,-40,66,-22,66,-40,-40,-19,-21,]),'FILL':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,162,168,169,171,172,173,174,176,177,178,179,180,181,183,199,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-15,7,-28,-34,-38,-17,-35,-39,-16,-18,-68,7,7,7,-33,-32,7,-31,7,7,7,7,7,7,7,7,7,7,7,-30,-60,]),'ENDINCASE':([67,85,139,],[88,116,-23,]),'PROCEDURE':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,162,168,169,171,172,173,174,176,177,178,179,180,181,183,199,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-15,15,-28,-34,-38,-17,-35,-39,-16,-18,-68,15,15,15,-33,-32,15,-31,15,15,15,15,15,15,15,15,15,15,15,-30,-60,]),'NUMBER':([32,37,41,52,75,76,80,84,86,90,97,100,102,106,108,109,126,127,128,163,],[60,68,60,60,60,102,110,113,60,60,60,127,102,102,60,60,60,102,102,182,]),'COLON':([154,],[162,]),'INITIALIZE':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,162,168,169,171,172,173,174,176,177,178,179,180,181,183,199,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-15,4,-28,-34,-38,-17,-35,-39,-16,-18,-68,4,4,4,-33,-32,4,-31,4,4,4,4,4,4,4,4,4,4,4,-30,-60,]),'DEFAULT':([57,155,],[80,163,]),'DIAGL':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,162,168,169,171,172,173,174,176,177,178,179,180,181,183,199,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-15,5,-28,-34,-38,-17,-35,-39,-16,-18,-68,5,5,5,-33,-32,5,-31,5,5,5,5,5,5,5,5,5,5,5,-30,-60,]),'DECREASE':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,162,168,169,171,172,173,174,176,177,178,179,180,181,183,199,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-15,18,-28,-34,-38,-17,-35,-39,-16,-18,-68,18,18,18,-33,-32,18,-31,18,18,18,18,18,18,18,18,18,18,18,-30,-60,]),'RPAREN':([58,59,60,61,68,69,70,72,76,77,91,92,93,94,96,101,102,103,104,105,106,123,124,125,127,128,130,131,133,143,146,147,153,],[82,83,-25,-24,-37,89,-36,-40,-40,107,-56,-55,122,-57,-40,129,-40,-63,-62,-61,-40,-40,-58,144,-40,-40,-65,-64,149,-59,-67,-66,161,]),'COMMA':([60,61,71,72,73,76,78,96,102,106,121,123,127,128,],[-25,-24,90,95,97,100,108,95,100,100,140,95,100,100,]),'INCASE':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,162,168,169,171,172,173,174,176,177,178,179,180,181,183,199,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-15,6,-28,-34,-38,-17,-35,-39,-16,-18,-68,6,6,6,-33,-32,6,-31,6,6,6,6,6,6,6,6,6,6,6,-30,-60,]),'RBRACKET':([1,2,3,8,9,10,12,13,14,16,17,21,24,27,29,30,38,39,40,42,43,44,46,47,51,54,56,81,87,98,111,112,118,119,120,132,135,137,148,151,152,156,157,159,160,168,183,199,],[-40,-14,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-10,-11,-9,-5,-8,-4,-2,-7,-12,-13,-3,-6,-1,-15,-40,-28,-34,-38,139,-17,-35,-39,-16,-18,-68,-40,-40,-33,-32,166,167,-31,-30,-60,]),'REPEAT':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,162,168,169,171,172,173,174,176,177,178,179,180,181,183,199,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-15,19,-28,-34,-38,-17,-35,-39,-16,-18,-68,19,19,19,-33,-32,19,-31,19,19,19,19,19,19,19,19,19,19,19,-30,-60,]),'CALL':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,168,183,199,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-15,20,-28,-34,-38,-17,-35,-39,-16,-18,-68,20,20,20,-33,-32,-31,-30,-60,]),'UNTIL':([55,81,135,],[79,-15,-16,]),'CONDITION':([60,61,62,65,79,99,],[-25,-24,84,86,109,126,]),'LPAREN':([4,5,7,11,18,22,23,45,50,],[31,32,37,41,48,52,53,72,76,]),'DIAGR':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,162,168,169,171,172,173,174,176,177,178,179,180,181,183,199,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-15,22,-28,-34,-38,-17,-35,-39,-16,-18,-68,22,22,22,-33,-32,22,-31,22,22,22,22,22,22,22,22,22,22,22,-30,-60,]),'END':([98,111,112,119,120,132,137,156,157,162,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,186,187,188,189,190,192,193,194,195,196,197,199,],[-28,-34,-38,-17,-35,-39,-18,-33,-32,-40,-31,-40,-54,-40,-40,-40,-40,191,-40,-40,-40,-40,-40,-40,-30,-51,-52,-50,-46,-49,-45,-53,-48,-43,-44,-47,-60,]),'THEN':([60,61,113,114,115,117,],[-25,-24,-27,136,-26,138,]),'INCREASE':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,162,168,169,171,172,173,174,176,177,178,179,180,181,183,199,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-15,23,-28,-34,-38,-17,-35,-39,-16,-18,-68,23,23,23,-33,-32,23,-31,23,23,23,23,23,23,23,23,23,23,23,-30,-60,]),'DO':([60,61,134,],[-25,-24,150,]),'TOFIND':([1,2,3,8,9,10,12,13,14,16,17,19,21,24,27,29,30,38,39,40,42,43,44,46,47,49,51,54,56,81,98,111,112,119,120,132,135,137,148,156,157,168,183,199,],[-40,-14,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-10,-11,-9,-5,-8,-4,-2,-7,-12,-13,75,-3,-6,-1,-15,-28,-34,-38,-17,-35,-39,-16,-18,-68,-33,-32,-31,-30,-60,]),'ENDFROM':([1,2,3,8,9,10,12,13,14,16,17,21,24,27,29,30,38,39,40,42,43,44,46,47,51,54,56,81,98,111,112,119,120,132,135,137,148,150,156,157,158,168,183,199,],[-40,-14,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-10,-11,-9,-5,-8,-4,-2,-7,-12,-13,-3,-6,-1,-15,-28,-34,-38,-17,-35,-39,-16,-18,-68,-40,-33,-32,165,-31,-30,-60,]),'LBRACKET':([66,136,138,],[87,151,152,]),'DOT':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,162,168,169,171,172,173,174,176,177,178,179,180,181,183,199,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-15,11,-28,-34,-38,-17,-35,-39,-16,-18,-68,11,11,11,-33,-32,11,-31,11,11,11,11,11,11,11,11,11,11,11,-30,-60,]),'COLOR':([140,],[153,]),'WHEN':([6,35,166,167,],[34,65,34,65,]),'FROM':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,81,87,98,111,112,119,120,132,135,137,148,150,151,152,156,157,162,168,169,171,172,173,174,176,177,178,179,180,181,183,199,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-15,25,-28,-34,-38,-17,-35,-39,-16,-18,-68,25,25,25,-33,-32,25,-31,25,25,25,25,25,25,25,25,25,25,25,-30,-60,]),'$end':([0,1,2,3,8,9,10,12,13,14,16,17,21,24,26,27,29,30,38,39,40,42,43,44,46,47,51,54,56,81,98,111,112,119,120,132,135,137,148,156,157,168,183,199,],[-40,-40,-14,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,0,-40,-10,-11,-9,-5,-8,-4,-2,-7,-12,-13,-3,-6,-1,-15,-28,-34,-38,-17,-35,-39,-16,-18,-68,-33,-32,-31,-30,-60,]),'SEMICOLON':([57,60,61,74,82,83,88,89,107,110,116,129,144,145,149,155,161,165,182,191,],[81,-25,-24,98,111,112,119,120,132,135,137,148,156,-29,157,164,168,183,198,199,]),'DECLARE':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,25,27,81,87,98,111,112,119,120,122,132,135,137,148,150,151,152,156,157,168,183,199,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-15,28,-28,-34,-38,-17,-35,142,-39,-16,-18,-68,28,28,28,-33,-32,-31,-30,-60,]),'ID':([6,15,20,28,31,32,34,37,41,48,52,53,72,75,76,84,86,90,95,96,97,100,102,106,108,109,123,126,127,128,142,],[35,45,50,57,58,61,62,70,61,73,61,78,96,61,106,115,61,61,123,96,61,128,106,106,61,61,96,61,106,106,155,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'fill':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,162,169,171,172,173,174,176,177,178,179,180,181,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,178,178,178,178,178,178,178,178,178,178,178,178,]),'params_call':([76,102,106,127,128,],[101,130,131,146,147,]),'localDeclare':([122,],[141,]),'diagonal_right':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,162,169,171,172,173,174,176,177,178,179,180,181,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,169,169,169,169,169,169,169,169,169,169,169,169,]),'oneParam':([72,96,123,],[92,92,92,]),'procedure':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,162,169,171,172,173,174,176,177,178,179,180,181,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,177,177,177,177,177,177,177,177,177,177,177,177,]),'ifnot':([36,64,],[67,85,]),'empty':([0,1,3,6,8,9,10,12,13,14,16,17,19,21,24,27,35,72,76,87,96,102,106,123,127,128,150,151,152,162,166,167,169,171,172,173,174,176,177,178,179,180,181,],[2,2,2,33,2,2,2,2,2,2,2,2,2,2,2,2,63,94,103,2,94,103,103,94,103,103,2,2,2,170,33,63,170,170,170,170,170,170,170,170,170,170,170,]),'call':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'oneParam_call':([76,102,106,127,128,],[105,105,105,105,105,]),'diagonal_left':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,162,169,171,172,173,174,176,177,178,179,180,181,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,171,171,171,171,171,171,171,171,171,171,171,171,]),'until_find':([49,],[74,]),'sentence_when1':([84,],[114,]),'when1':([6,166,],[36,184,]),'decrease':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,162,169,171,172,173,174,176,177,178,179,180,181,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,172,172,172,172,172,172,172,172,172,172,172,172,]),'when2':([35,167,],[64,185,]),'repeat':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,162,169,171,172,173,174,176,177,178,179,180,181,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,180,180,180,180,180,180,180,180,180,180,180,180,]),'sentence':([32,41,52,75,86,90,97,108,109,126,],[59,71,77,99,117,121,125,133,134,145,]),'dot':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,162,169,171,172,173,174,176,177,178,179,180,181,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,173,173,173,173,173,173,173,173,173,173,173,173,]),'declare':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,25,27,87,150,151,152,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,55,27,27,27,27,27,]),'params':([72,96,123,],[93,124,143,]),'increase':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,162,169,171,172,173,174,176,177,178,179,180,181,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,174,174,174,174,174,174,174,174,174,174,174,174,]),'initialize':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,162,169,171,172,173,174,176,177,178,179,180,181,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,181,181,181,181,181,181,181,181,181,181,181,181,]),'moreParam':([72,96,123,],[91,91,91,]),'localExpression':([162,169,171,172,173,174,176,177,178,179,180,181,],[175,186,187,188,189,190,192,193,194,195,196,197,]),'moreParam_call':([76,102,106,127,128,],[104,104,104,104,104,]),'inCase':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,162,169,171,172,173,174,176,177,178,179,180,181,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,179,179,179,179,179,179,179,179,179,179,179,179,]),'expression':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,],[26,29,30,38,39,40,42,43,44,46,47,49,51,54,56,118,158,159,160,]),'since':([0,1,3,8,9,10,12,13,14,16,17,19,21,24,27,87,150,151,152,162,169,171,172,173,174,176,177,178,179,180,181,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,176,176,176,176,176,176,176,176,176,176,176,176,]),'fillSentence':([37,],[69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> declare expression','expression',2,'p_expression','yacc_Duino.py',40),
  ('expression -> inCase expression','expression',2,'p_expression','yacc_Duino.py',41),
  ('expression -> repeat expression','expression',2,'p_expression','yacc_Duino.py',42),
  ('expression -> since expression','expression',2,'p_expression','yacc_Duino.py',43),
  ('expression -> dot expression','expression',2,'p_expression','yacc_Duino.py',44),
  ('expression -> initialize expression','expression',2,'p_expression','yacc_Duino.py',45),
  ('expression -> fill expression','expression',2,'p_expression','yacc_Duino.py',46),
  ('expression -> increase expression','expression',2,'p_expression','yacc_Duino.py',47),
  ('expression -> decrease expression','expression',2,'p_expression','yacc_Duino.py',48),
  ('expression -> diagonal_right expression','expression',2,'p_expression','yacc_Duino.py',49),
  ('expression -> diagonal_left expression','expression',2,'p_expression','yacc_Duino.py',50),
  ('expression -> procedure expression','expression',2,'p_expression','yacc_Duino.py',51),
  ('expression -> call expression','expression',2,'p_expression','yacc_Duino.py',52),
  ('expression -> empty','expression',1,'p_expression','yacc_Duino.py',53),
  ('declare -> DECLARE ID SEMICOLON','declare',3,'p_declare','yacc_Duino.py',57),
  ('declare -> DECLARE ID DEFAULT NUMBER SEMICOLON','declare',5,'p_declare','yacc_Duino.py',58),
  ('inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON','inCase',5,'p_inCase','yacc_Duino.py',66),
  ('inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON','inCase',6,'p_inCase','yacc_Duino.py',67),
  ('when1 -> WHEN ID CONDITION sentence_when1 THEN LBRACKET expression RBRACKET when1','when1',9,'p_when1','yacc_Duino.py',80),
  ('when1 -> empty','when1',1,'p_when1','yacc_Duino.py',81),
  ('when2 -> WHEN CONDITION sentence THEN LBRACKET expression RBRACKET when2','when2',8,'p_when2','yacc_Duino.py',97),
  ('when2 -> empty','when2',1,'p_when2','yacc_Duino.py',98),
  ('ifnot -> IFNOT LBRACKET expression RBRACKET','ifnot',4,'p_ifnot','yacc_Duino.py',102),
  ('sentence -> ID','sentence',1,'p_sentence','yacc_Duino.py',107),
  ('sentence -> NUMBER','sentence',1,'p_sentence','yacc_Duino.py',108),
  ('sentence_when1 -> ID','sentence_when1',1,'p_sentence_when1','yacc_Duino.py',116),
  ('sentence_when1 -> NUMBER','sentence_when1',1,'p_sentence_when1','yacc_Duino.py',117),
  ('repeat -> REPEAT expression until_find SEMICOLON','repeat',4,'p_repeat','yacc_Duino.py',128),
  ('until_find -> TOFIND sentence CONDITION sentence','until_find',4,'p_until_find','yacc_Duino.py',132),
  ('since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON','since',9,'p_since','yacc_Duino.py',140),
  ('dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON','dot',9,'p_dot','yacc_Duino.py',144),
  ('increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON','increase',7,'p_increase','yacc_Duino.py',147),
  ('decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON','decrease',7,'p_decrease','yacc_Duino.py',152),
  ('initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON','initialize',5,'p_initialize','yacc_Duino.py',157),
  ('fill -> FILL LPAREN fillSentence RPAREN SEMICOLON','fill',5,'p_fill','yacc_Duino.py',162),
  ('fillSentence -> ID','fillSentence',1,'p_fillSentence','yacc_Duino.py',165),
  ('fillSentence -> NUMBER','fillSentence',1,'p_fillSentence','yacc_Duino.py',166),
  ('diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON','diagonal_left',5,'p_digonalleft','yacc_Duino.py',184),
  ('diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON','diagonal_right',5,'p_digonalright','yacc_Duino.py',187),
  ('empty -> <empty>','empty',0,'p_empty','yacc_Duino.py',190),
  ('localDeclare -> DECLARE ID SEMICOLON','localDeclare',3,'p_localDeclare','yacc_Duino.py',220),
  ('localDeclare -> DECLARE ID DEFAULT NUMBER SEMICOLON','localDeclare',5,'p_localDeclare','yacc_Duino.py',221),
  ('localExpression -> inCase localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',233),
  ('localExpression -> repeat localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',234),
  ('localExpression -> since localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',235),
  ('localExpression -> dot localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',236),
  ('localExpression -> initialize localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',237),
  ('localExpression -> fill localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',238),
  ('localExpression -> increase localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',239),
  ('localExpression -> decrease localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',240),
  ('localExpression -> diagonal_right localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',241),
  ('localExpression -> diagonal_left localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',242),
  ('localExpression -> procedure localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',243),
  ('localExpression -> empty','localExpression',1,'p_localExpression','yacc_Duino.py',244),
  ('params -> oneParam','params',1,'p_params','yacc_Duino.py',248),
  ('params -> moreParam','params',1,'p_params','yacc_Duino.py',249),
  ('params -> empty','params',1,'p_params','yacc_Duino.py',250),
  ('oneParam -> ID params','oneParam',2,'p_oneParam','yacc_Duino.py',253),
  ('moreParam -> COMMA ID params','moreParam',3,'p_moreParam','yacc_Duino.py',258),
  ('procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON','procedure',11,'p_procedure','yacc_Duino.py',264),
  ('params_call -> oneParam_call','params_call',1,'p_params_call','yacc_Duino.py',271),
  ('params_call -> moreParam_call','params_call',1,'p_params_call','yacc_Duino.py',272),
  ('params_call -> empty','params_call',1,'p_params_call','yacc_Duino.py',273),
  ('oneParam_call -> ID params_call','oneParam_call',2,'p_oneParam_call','yacc_Duino.py',276),
  ('oneParam_call -> NUMBER params_call','oneParam_call',2,'p_oneParam_call','yacc_Duino.py',277),
  ('moreParam_call -> COMMA ID params_call','moreParam_call',3,'p_moreParam_call','yacc_Duino.py',281),
  ('moreParam_call -> COMMA NUMBER params_call','moreParam_call',3,'p_moreParam_call','yacc_Duino.py',282),
  ('call -> CALL ID LPAREN params_call RPAREN SEMICOLON','call',6,'p_call','yacc_Duino.py',286),
]
