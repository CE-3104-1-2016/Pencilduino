
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '62CABB7BF89A67097B87CAACD3A8B853'
    
_lr_action_items = {'DIAGR':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,157,164,165,166,167,168,169,171,172,173,174,175,176,179,195,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-15,-26,15,-32,-34,-17,-35,-16,-33,15,-64,-18,15,15,-31,-30,15,15,15,15,15,15,15,15,15,15,15,15,-28,-29,-56,]),'CONDITION':([60,63,64,71,72,97,],[87,-24,-25,101,102,120,]),'RBRACKET':([7,8,9,11,14,16,17,19,21,22,24,25,26,27,35,36,41,44,46,47,49,51,52,54,55,56,57,77,96,99,109,119,121,122,128,130,131,136,141,150,151,153,154,159,160,176,179,195,],[-14,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-13,-6,-11,-12,-9,-5,-1,-4,-8,-10,-2,-7,-3,-15,-26,-36,-32,-34,-17,140,-35,-16,-33,-64,-18,-36,-36,-31,-30,177,178,-28,-29,-56,]),'ENDFROM':([7,8,9,11,14,16,17,19,21,22,24,25,26,27,35,36,41,44,46,47,49,51,52,54,55,56,57,77,96,109,119,121,128,130,131,135,136,141,149,153,154,176,179,195,],[-14,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-13,-6,-11,-12,-9,-5,-1,-4,-8,-10,-2,-7,-3,-15,-26,-32,-34,-17,-35,-16,-33,-36,-64,-18,158,-31,-30,-28,-29,-56,]),'INCREASE':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,157,164,165,166,167,168,169,171,172,173,174,175,176,179,195,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-15,-26,18,-32,-34,-17,-35,-16,-33,18,-64,-18,18,18,-31,-30,18,18,18,18,18,18,18,18,18,18,18,18,-28,-29,-56,]),'PROCEDURE':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,157,164,165,166,167,168,169,171,172,173,174,175,176,179,195,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-15,-26,2,-32,-34,-17,-35,-16,-33,2,-64,-18,2,2,-31,-30,2,2,2,2,2,2,2,2,2,2,2,2,-28,-29,-56,]),'NUMBER':([33,42,45,53,61,66,78,87,89,91,93,101,102,103,104,106,116,117,120,156,],[64,64,64,64,93,64,107,64,93,117,93,64,64,64,64,64,93,93,64,162,]),'FROM':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,157,164,165,166,167,168,169,171,172,173,174,175,176,179,195,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-15,-26,3,-32,-34,-17,-35,-16,-33,3,-64,-18,3,3,-31,-30,3,3,3,3,3,3,3,3,3,3,3,3,-28,-29,-56,]),'THEN':([63,64,124,125,],[-24,-25,142,143,]),'COLOR':([144,],[152,]),'ENDINCASE':([67,100,140,],[98,123,-23,]),'$end':([0,7,8,9,11,14,16,17,19,21,22,24,25,26,27,28,35,36,41,44,46,47,49,51,52,54,55,56,57,77,96,109,119,121,128,130,131,136,141,153,154,176,179,195,],[-36,-14,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,0,-13,-6,-11,-12,-9,-5,-1,-4,-8,-10,-2,-7,-3,-15,-26,-32,-34,-17,-35,-16,-33,-64,-18,-31,-30,-28,-29,-56,]),'CALL':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,176,179,195,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-15,-26,4,-32,-34,-17,-35,-16,-33,4,-64,-18,4,4,-31,-30,-28,-29,-56,]),'DIAGL':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,157,164,165,166,167,168,169,171,172,173,174,175,176,179,195,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-15,-26,5,-32,-34,-17,-35,-16,-33,5,-64,-18,5,5,-31,-30,5,5,5,5,5,5,5,5,5,5,5,5,-28,-29,-56,]),'INITIALIZE':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,157,164,165,166,167,168,169,171,172,173,174,175,176,179,195,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-15,-26,1,-32,-34,-17,-35,-16,-33,1,-64,-18,1,1,-31,-30,1,1,1,1,1,1,1,1,1,1,1,1,-28,-29,-56,]),'LPAREN':([1,5,12,13,15,18,23,30,32,],[29,33,42,43,45,48,53,59,61,]),'WHEN':([10,38,177,178,],[40,71,71,40,]),'TOFIND':([6,7,8,9,11,14,16,17,19,21,22,24,25,26,27,34,35,36,41,44,46,47,49,51,52,54,55,56,57,77,96,109,119,121,128,130,131,136,141,153,154,176,179,195,],[-36,-14,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,66,-13,-6,-11,-12,-9,-5,-1,-4,-8,-10,-2,-7,-3,-15,-26,-32,-34,-17,-35,-16,-33,-64,-18,-31,-30,-28,-29,-56,]),'DECLARE':([0,3,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,111,119,121,128,130,131,135,136,141,150,151,153,154,176,179,195,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-15,-26,20,-32,133,-34,-17,-35,-16,-33,20,-64,-18,20,20,-31,-30,-28,-29,-56,]),'FILL':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,157,164,165,166,167,168,169,171,172,173,174,175,176,179,195,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-15,-26,23,-32,-34,-17,-35,-16,-33,23,-64,-18,23,23,-31,-30,23,23,23,23,23,23,23,23,23,23,23,23,-28,-29,-56,]),'UNTIL':([31,77,130,],[60,-15,-16,]),'SEMICOLON':([50,63,64,65,80,95,98,105,107,108,114,123,139,145,146,147,158,161,162,187,],[77,-24,-25,96,109,119,121,128,130,131,136,141,-27,153,154,155,176,179,180,195,]),'DOT':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,157,164,165,166,167,168,169,171,172,173,174,175,176,179,195,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-15,-26,12,-32,-34,-17,-35,-16,-33,12,-64,-18,12,12,-31,-30,12,12,12,12,12,12,12,12,12,12,12,12,-28,-29,-56,]),'RPAREN':([58,59,61,62,63,64,75,79,82,83,84,85,86,88,89,90,92,93,94,110,112,115,116,117,118,127,129,132,137,138,152,],[80,-36,-36,95,-24,-25,105,108,111,-53,-36,-52,-51,114,-36,-58,-59,-36,-57,-36,-54,-60,-36,-36,-61,145,146,-55,-62,-63,161,]),'COMMA':([59,61,63,64,73,74,76,84,89,93,110,116,117,126,],[81,91,-24,-25,103,104,106,81,91,91,81,91,91,144,]),'END':([96,109,119,121,128,131,141,153,154,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,181,182,183,184,185,186,188,189,190,191,192,195,],[-26,-32,-34,-17,-35,-33,-18,-31,-30,-36,-50,-36,-36,-36,-36,-36,-36,187,-36,-36,-36,-36,-36,-28,-29,-43,-48,-49,-46,-42,-44,-41,-45,-47,-39,-40,-56,]),'IFNOT':([10,37,38,39,69,70,177,178,193,194,],[-36,68,-36,-20,68,-22,-36,-36,-21,-19,]),'INCASE':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,157,164,165,166,167,168,169,171,172,173,174,175,176,179,195,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-15,-26,10,-32,-34,-17,-35,-16,-33,10,-64,-18,10,10,-31,-30,10,10,10,10,10,10,10,10,10,10,10,10,-28,-29,-56,]),'ID':([2,4,10,20,29,33,40,42,43,45,48,53,59,61,66,81,84,87,89,91,93,101,102,103,104,106,110,116,117,120,133,],[30,32,38,50,58,63,72,63,74,63,76,63,84,89,63,110,84,63,89,116,89,63,63,63,63,63,84,89,89,63,147,]),'DECREASE':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,157,164,165,166,167,168,169,171,172,173,174,175,176,179,195,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-15,-26,13,-32,-34,-17,-35,-16,-33,13,-64,-18,13,13,-31,-30,13,13,13,13,13,13,13,13,13,13,13,13,-28,-29,-56,]),'COLON':([148,],[157,]),'REPEAT':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,77,96,99,109,119,121,128,130,131,135,136,141,150,151,153,154,157,164,165,166,167,168,169,171,172,173,174,175,176,179,195,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-15,-26,6,-32,-34,-17,-35,-16,-33,6,-64,-18,6,6,-31,-30,6,6,6,6,6,6,6,6,6,6,6,6,-28,-29,-56,]),'START':([134,155,180,],[148,-37,-38,]),'DO':([63,64,113,],[-24,-25,135,]),'DEFAULT':([50,147,],[78,156,]),'LBRACKET':([68,142,143,],[99,150,151,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'oneParam':([59,84,110,],[86,86,86,]),'decrease':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,167,167,167,167,167,167,167,167,167,167,167,167,]),'dot':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,168,168,168,168,168,168,168,168,168,168,168,168,]),'sentence':([33,42,45,53,66,87,101,102,103,104,106,120,],[62,73,75,79,97,113,124,125,126,127,129,139,]),'when2':([38,177,],[69,193,]),'until_find':([34,],[65,]),'declare':([0,3,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,],[19,31,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'moreParam':([59,84,110,],[85,85,85,]),'call':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ifnot':([37,69,],[67,100,]),'initialize':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,164,164,164,164,164,164,164,164,164,164,164,164,]),'params_call':([61,89,93,116,117,],[88,115,118,137,138,]),'empty':([0,6,8,9,10,11,14,16,17,19,21,22,24,25,26,27,38,59,61,84,89,93,99,110,116,117,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,177,178,],[7,7,7,7,39,7,7,7,7,7,7,7,7,7,7,7,70,83,92,83,92,92,7,83,92,92,7,7,7,163,163,163,163,163,163,163,163,163,163,163,163,70,39,]),'diagonal_left':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,165,165,165,165,165,165,165,165,165,165,165,165,]),'diagonal_right':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,173,173,173,173,173,173,173,173,173,173,173,173,]),'moreParam_call':([61,89,93,116,117,],[90,90,90,90,90,]),'procedure':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,166,166,166,166,166,166,166,166,166,166,166,166,]),'localDeclare':([111,],[134,]),'since':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,171,171,171,171,171,171,171,171,171,171,171,171,]),'oneParam_call':([61,89,93,116,117,],[94,94,94,94,94,]),'when1':([10,178,],[37,194,]),'expression':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,],[28,34,35,36,41,44,46,47,49,51,52,54,55,56,57,122,149,159,160,]),'inCase':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,174,174,174,174,174,174,174,174,174,174,174,174,]),'params':([59,84,110,],[82,112,132,]),'fill':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,169,169,169,169,169,169,169,169,169,169,169,169,]),'repeat':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,175,175,175,175,175,175,175,175,175,175,175,175,]),'increase':([0,6,8,9,11,14,16,17,19,21,22,24,25,26,27,99,135,150,151,157,164,165,166,167,168,169,171,172,173,174,175,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,172,172,172,172,172,172,172,172,172,172,172,172,]),'localExpression':([157,164,165,166,167,168,169,171,172,173,174,175,],[170,181,182,183,184,185,186,188,189,190,191,192,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> declare expression','expression',2,'p_expression','yacc_Duino.py',40),
  ('expression -> inCase expression','expression',2,'p_expression','yacc_Duino.py',41),
  ('expression -> repeat expression','expression',2,'p_expression','yacc_Duino.py',42),
  ('expression -> since expression','expression',2,'p_expression','yacc_Duino.py',43),
  ('expression -> dot expression','expression',2,'p_expression','yacc_Duino.py',44),
  ('expression -> initialize expression','expression',2,'p_expression','yacc_Duino.py',45),
  ('expression -> fill expression','expression',2,'p_expression','yacc_Duino.py',46),
  ('expression -> increase expression','expression',2,'p_expression','yacc_Duino.py',47),
  ('expression -> decrease expression','expression',2,'p_expression','yacc_Duino.py',48),
  ('expression -> diagonal_right expression','expression',2,'p_expression','yacc_Duino.py',49),
  ('expression -> diagonal_left expression','expression',2,'p_expression','yacc_Duino.py',50),
  ('expression -> procedure expression','expression',2,'p_expression','yacc_Duino.py',51),
  ('expression -> call expression','expression',2,'p_expression','yacc_Duino.py',52),
  ('expression -> empty','expression',1,'p_expression','yacc_Duino.py',53),
  ('declare -> DECLARE ID SEMICOLON','declare',3,'p_declare','yacc_Duino.py',61),
  ('declare -> DECLARE ID DEFAULT NUMBER SEMICOLON','declare',5,'p_declare','yacc_Duino.py',62),
  ('inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON','inCase',5,'p_inCase','yacc_Duino.py',72),
  ('inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON','inCase',6,'p_inCase','yacc_Duino.py',73),
  ('when1 -> WHEN ID CONDITION sentence THEN LBRACKET expression RBRACKET when1','when1',9,'p_when1','yacc_Duino.py',83),
  ('when1 -> empty','when1',1,'p_when1','yacc_Duino.py',84),
  ('when2 -> WHEN CONDITION sentence THEN LBRACKET expression RBRACKET when2','when2',8,'p_when2','yacc_Duino.py',95),
  ('when2 -> empty','when2',1,'p_when2','yacc_Duino.py',96),
  ('ifnot -> IFNOT LBRACKET expression RBRACKET','ifnot',4,'p_ifnot','yacc_Duino.py',102),
  ('sentence -> ID','sentence',1,'p_sentence','yacc_Duino.py',108),
  ('sentence -> NUMBER','sentence',1,'p_sentence','yacc_Duino.py',109),
  ('repeat -> REPEAT expression until_find SEMICOLON','repeat',4,'p_repeat','yacc_Duino.py',120),
  ('until_find -> TOFIND sentence CONDITION sentence','until_find',4,'p_until_find','yacc_Duino.py',126),
  ('since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON','since',9,'p_since','yacc_Duino.py',131),
  ('dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON','dot',9,'p_dot','yacc_Duino.py',136),
  ('increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON','increase',7,'p_increase','yacc_Duino.py',140),
  ('decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON','decrease',7,'p_decrease','yacc_Duino.py',148),
  ('initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON','initialize',5,'p_initialize','yacc_Duino.py',156),
  ('fill -> FILL LPAREN sentence RPAREN SEMICOLON','fill',5,'p_fill','yacc_Duino.py',164),
  ('diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON','diagonal_left',5,'p_digonalleft','yacc_Duino.py',169),
  ('diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON','diagonal_right',5,'p_digonalright','yacc_Duino.py',174),
  ('empty -> <empty>','empty',0,'p_empty','yacc_Duino.py',179),
  ('localDeclare -> DECLARE ID SEMICOLON','localDeclare',3,'p_localDeclare','yacc_Duino.py',209),
  ('localDeclare -> DECLARE ID DEFAULT NUMBER SEMICOLON','localDeclare',5,'p_localDeclare','yacc_Duino.py',210),
  ('localExpression -> inCase localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',222),
  ('localExpression -> repeat localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',223),
  ('localExpression -> since localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',224),
  ('localExpression -> dot localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',225),
  ('localExpression -> initialize localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',226),
  ('localExpression -> fill localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',227),
  ('localExpression -> increase localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',228),
  ('localExpression -> decrease localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',229),
  ('localExpression -> diagonal_right localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',230),
  ('localExpression -> diagonal_left localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',231),
  ('localExpression -> procedure localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',232),
  ('localExpression -> empty','localExpression',1,'p_localExpression','yacc_Duino.py',233),
  ('params -> oneParam','params',1,'p_params','yacc_Duino.py',237),
  ('params -> moreParam','params',1,'p_params','yacc_Duino.py',238),
  ('params -> empty','params',1,'p_params','yacc_Duino.py',239),
  ('oneParam -> ID params','oneParam',2,'p_oneParam','yacc_Duino.py',242),
  ('moreParam -> COMMA ID params','moreParam',3,'p_moreParam','yacc_Duino.py',247),
  ('procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON','procedure',11,'p_procedure','yacc_Duino.py',253),
  ('params_call -> oneParam_call','params_call',1,'p_params_call','yacc_Duino.py',260),
  ('params_call -> moreParam_call','params_call',1,'p_params_call','yacc_Duino.py',261),
  ('params_call -> empty','params_call',1,'p_params_call','yacc_Duino.py',262),
  ('oneParam_call -> ID params_call','oneParam_call',2,'p_oneParam_call','yacc_Duino.py',265),
  ('oneParam_call -> NUMBER params_call','oneParam_call',2,'p_oneParam_call','yacc_Duino.py',266),
  ('moreParam_call -> COMMA ID params_call','moreParam_call',3,'p_moreParam_call','yacc_Duino.py',270),
  ('moreParam_call -> COMMA NUMBER params_call','moreParam_call',3,'p_moreParam_call','yacc_Duino.py',271),
  ('call -> CALL ID LPAREN params_call RPAREN SEMICOLON','call',6,'p_call','yacc_Duino.py',275),
]
