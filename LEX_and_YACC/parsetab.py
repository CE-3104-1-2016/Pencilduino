
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BC388834BA008CDA5C5404B245F9159F'
    
_lr_action_items = {'COLOR':([134,],[149,]),'NUMBER':([30,33,34,35,73,74,78,85,88,89,92,95,98,101,109,110,123,124,126,160,],[58,61,61,61,92,61,108,61,61,61,92,123,92,61,61,61,92,92,61,167,]),'ID':([14,16,22,25,30,33,34,35,36,41,50,56,73,74,77,85,88,89,92,95,98,101,102,103,109,110,123,124,126,129,145,],[40,45,51,54,59,62,62,62,66,70,76,81,98,62,102,62,62,62,98,124,98,62,102,129,62,62,98,98,62,102,153,]),'ENDINCASE':([71,87,138,],[90,116,-23,]),'IFNOT':([14,40,42,43,67,69,165,166,182,183,],[-38,-38,-20,72,72,-22,-38,-38,-21,-19,]),'DOT':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,162,164,168,170,172,173,174,175,176,177,178,179,180,181,197,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-15,8,-26,-33,-36,-37,-32,-17,-16,-18,-66,8,8,8,-30,-31,8,-29,8,8,8,8,8,8,8,8,8,8,8,-28,-58,]),'WHEN':([14,40,165,166,],[41,68,68,41,]),'LBRACKET':([72,136,137,],[91,150,151,]),'INCASE':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,162,164,168,170,172,173,174,175,176,177,178,179,180,181,197,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-15,14,-26,-33,-36,-37,-32,-17,-16,-18,-66,14,14,14,-30,-31,14,-29,14,14,14,14,14,14,14,14,14,14,14,-28,-58,]),'$end':([0,1,3,4,6,9,11,12,13,15,17,19,20,23,24,28,29,31,32,37,38,39,44,46,48,49,52,53,57,79,100,111,112,113,115,119,131,135,139,152,156,164,181,197,],[-38,-38,-38,-38,-14,0,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-12,-13,-1,-6,-10,-3,-9,-4,-8,-7,-11,-5,-2,-15,-26,-33,-36,-37,-32,-17,-16,-18,-66,-30,-31,-29,-28,-58,]),'RBRACKET':([1,3,4,6,11,12,13,15,17,19,20,23,24,28,29,31,32,37,38,39,44,46,48,49,52,53,57,79,91,100,111,112,113,115,119,120,131,135,139,150,151,152,156,158,159,164,181,197,],[-38,-38,-38,-14,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-12,-13,-1,-6,-10,-3,-9,-4,-8,-7,-11,-5,-2,-15,-38,-26,-33,-36,-37,-32,-17,138,-16,-18,-66,-38,-38,-30,-31,165,166,-29,-28,-58,]),'SEMICOLON':([54,61,62,75,82,83,84,86,90,108,116,122,142,143,148,153,157,163,167,186,],[79,-25,-24,100,111,112,113,115,119,131,135,139,-27,152,156,161,164,181,184,197,]),'CALL':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,164,181,197,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-15,16,-26,-33,-36,-37,-32,-17,-16,-18,-66,16,16,16,-30,-31,-29,-28,-58,]),'COMMA':([61,62,65,73,76,77,81,92,98,102,114,123,124,129,],[-25,-24,85,95,101,103,110,95,95,103,134,95,95,103,]),'RPAREN':([58,59,60,61,62,63,64,66,73,77,92,93,94,96,97,98,102,104,105,106,107,121,123,124,125,127,128,129,133,140,141,144,149,],[-35,-34,82,-25,-24,83,84,86,-38,-38,-38,122,-61,-59,-60,-38,-38,-54,130,-55,-53,-63,-38,-38,-62,143,-56,-38,148,-65,-64,-57,157,]),'UNTIL':([55,79,131,],[80,-15,-16,]),'COLON':([154,],[162,]),'INITIALIZE':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,162,164,168,170,172,173,174,175,176,177,178,179,180,181,197,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-15,10,-26,-33,-36,-37,-32,-17,-16,-18,-66,10,10,10,-30,-31,10,-29,10,10,10,10,10,10,10,10,10,10,10,-28,-58,]),'FILL':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,162,164,168,170,172,173,174,175,176,177,178,179,180,181,197,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-15,2,-26,-33,-36,-37,-32,-17,-16,-18,-66,2,2,2,-30,-31,2,-29,2,2,2,2,2,2,2,2,2,2,2,-28,-58,]),'REPEAT':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,162,164,168,170,172,173,174,175,176,177,178,179,180,181,197,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-15,18,-26,-33,-36,-37,-32,-17,-16,-18,-66,18,18,18,-30,-31,18,-29,18,18,18,18,18,18,18,18,18,18,18,-28,-58,]),'DO':([61,62,132,],[-25,-24,147,]),'PROCEDURE':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,162,164,168,170,172,173,174,175,176,177,178,179,180,181,197,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-15,22,-26,-33,-36,-37,-32,-17,-16,-18,-66,22,22,22,-30,-31,22,-29,22,22,22,22,22,22,22,22,22,22,22,-28,-58,]),'ENDFROM':([1,3,4,6,11,12,13,15,17,19,20,23,24,28,29,31,32,37,38,39,44,46,48,49,52,53,57,79,100,111,112,113,115,119,131,135,139,147,152,155,156,164,181,197,],[-38,-38,-38,-14,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-12,-13,-1,-6,-10,-3,-9,-4,-8,-7,-11,-5,-2,-15,-26,-33,-36,-37,-32,-17,-16,-18,-66,-38,-30,163,-31,-29,-28,-58,]),'START':([146,161,184,],[154,-39,-40,]),'TOFIND':([1,3,4,6,11,12,13,15,17,18,19,20,23,24,28,29,31,32,37,38,39,44,46,47,48,49,52,53,57,79,100,111,112,113,115,119,131,135,139,152,156,164,181,197,],[-38,-38,-38,-14,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-12,-13,-1,-6,-10,-3,-9,-4,74,-8,-7,-11,-5,-2,-15,-26,-33,-36,-37,-32,-17,-16,-18,-66,-30,-31,-29,-28,-58,]),'CONDITION':([61,62,68,70,80,99,],[-25,-24,88,89,109,126,]),'FROM':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,162,164,168,170,172,173,174,175,176,177,178,179,180,181,197,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-15,26,-26,-33,-36,-37,-32,-17,-16,-18,-66,26,26,26,-30,-31,26,-29,26,26,26,26,26,26,26,26,26,26,26,-28,-58,]),'DIAGL':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,162,164,168,170,172,173,174,175,176,177,178,179,180,181,197,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-15,5,-26,-33,-36,-37,-32,-17,-16,-18,-66,5,5,5,-30,-31,5,-29,5,5,5,5,5,5,5,5,5,5,5,-28,-58,]),'DEFAULT':([54,153,],[78,160,]),'THEN':([61,62,117,118,],[-25,-24,136,137,]),'DECLARE':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,26,28,79,91,100,111,112,113,115,119,130,131,135,139,147,150,151,152,156,164,181,197,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-15,25,-26,-33,-36,-37,-32,-17,145,-16,-18,-66,25,25,25,-30,-31,-29,-28,-58,]),'DIAGR':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,162,164,168,170,172,173,174,175,176,177,178,179,180,181,197,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-15,7,-26,-33,-36,-37,-32,-17,-16,-18,-66,7,7,7,-30,-31,7,-29,7,7,7,7,7,7,7,7,7,7,7,-28,-58,]),'INCREASE':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,162,164,168,170,172,173,174,175,176,177,178,179,180,181,197,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-15,21,-26,-33,-36,-37,-32,-17,-16,-18,-66,21,21,21,-30,-31,21,-29,21,21,21,21,21,21,21,21,21,21,21,-28,-58,]),'DECREASE':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,79,91,100,111,112,113,115,119,131,135,139,147,150,151,152,156,162,164,168,170,172,173,174,175,176,177,178,179,180,181,197,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-15,27,-26,-33,-36,-37,-32,-17,-16,-18,-66,27,27,27,-30,-31,27,-29,27,27,27,27,27,27,27,27,27,27,27,-28,-58,]),'END':([100,111,112,113,115,119,135,152,156,162,164,168,169,170,171,172,173,174,175,176,177,178,179,180,181,185,187,188,189,190,191,192,193,194,195,196,197,],[-26,-33,-36,-37,-32,-17,-18,-30,-31,-38,-29,-38,186,-38,-52,-38,-38,-38,-38,-38,-38,-38,-38,-38,-28,-51,-49,-45,-42,-48,-43,-46,-50,-44,-47,-41,-58,]),'LPAREN':([2,5,7,8,10,21,27,45,51,],[30,33,34,35,36,50,56,73,77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'params_call':([73,92,98,123,124,],[93,121,125,140,141,]),'repeat':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,162,168,170,172,173,174,175,176,177,178,179,180,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,173,173,173,173,173,173,173,173,173,173,173,173,]),'when2':([40,165,],[67,182,]),'moreParam':([77,102,129,],[104,104,104,]),'localDeclare':([130,],[146,]),'ifnot':([43,67,],[71,87,]),'oneParam_call':([73,92,98,123,124,],[96,96,96,96,96,]),'localExpression':([162,168,170,172,173,174,175,176,177,178,179,180,],[169,185,187,188,189,190,191,192,193,194,195,196,]),'decrease':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,162,168,170,172,173,174,175,176,177,178,179,180,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,174,174,174,174,174,174,174,174,174,174,174,174,]),'sentence':([33,34,35,74,85,88,89,101,109,110,126,],[63,64,65,99,114,117,118,127,132,133,142,]),'procedure':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,162,168,170,172,173,174,175,176,177,178,179,180,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,168,168,168,168,168,168,168,168,168,168,168,168,]),'fillSentence':([30,],[60,]),'since':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,162,168,170,172,173,174,175,176,177,178,179,180,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,175,175,175,175,175,175,175,175,175,175,175,175,]),'oneParam':([77,102,129,],[107,107,107,]),'declare':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,26,28,91,147,150,151,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,55,4,4,4,4,4,]),'diagonal_right':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,162,168,170,172,173,174,175,176,177,178,179,180,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,170,170,170,170,170,170,170,170,170,170,170,170,]),'fill':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,162,168,170,172,173,174,175,176,177,178,179,180,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,176,176,176,176,176,176,176,176,176,176,176,176,]),'initialize':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,162,168,170,172,173,174,175,176,177,178,179,180,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,172,172,172,172,172,172,172,172,172,172,172,172,]),'until_find':([47,],[75,]),'diagonal_left':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,162,168,170,172,173,174,175,176,177,178,179,180,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,177,177,177,177,177,177,177,177,177,177,177,177,]),'dot':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,162,168,170,172,173,174,175,176,177,178,179,180,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,178,178,178,178,178,178,178,178,178,178,178,178,]),'empty':([0,1,3,4,11,12,13,14,15,17,18,19,20,23,24,28,40,73,77,91,92,98,102,123,124,129,147,150,151,162,165,166,168,170,172,173,174,175,176,177,178,179,180,],[6,6,6,6,6,6,6,42,6,6,6,6,6,6,6,6,69,94,106,6,94,94,106,94,94,106,6,6,6,171,69,42,171,171,171,171,171,171,171,171,171,171,171,]),'call':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'params':([77,102,129,],[105,128,144,]),'moreParam_call':([73,92,98,123,124,],[97,97,97,97,97,]),'expression':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,],[9,29,31,32,37,38,39,44,46,47,48,49,52,53,57,120,155,158,159,]),'when1':([14,166,],[43,183,]),'increase':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,162,168,170,172,173,174,175,176,177,178,179,180,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,179,179,179,179,179,179,179,179,179,179,179,179,]),'inCase':([0,1,3,4,11,12,13,15,17,18,19,20,23,24,28,91,147,150,151,162,168,170,172,173,174,175,176,177,178,179,180,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,180,180,180,180,180,180,180,180,180,180,180,180,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> declare expression','expression',2,'p_expression','yacc_Duino.py',38),
  ('expression -> inCase expression','expression',2,'p_expression','yacc_Duino.py',39),
  ('expression -> repeat expression','expression',2,'p_expression','yacc_Duino.py',40),
  ('expression -> since expression','expression',2,'p_expression','yacc_Duino.py',41),
  ('expression -> dot expression','expression',2,'p_expression','yacc_Duino.py',42),
  ('expression -> initialize expression','expression',2,'p_expression','yacc_Duino.py',43),
  ('expression -> fill expression','expression',2,'p_expression','yacc_Duino.py',44),
  ('expression -> increase expression','expression',2,'p_expression','yacc_Duino.py',45),
  ('expression -> decrease expression','expression',2,'p_expression','yacc_Duino.py',46),
  ('expression -> diagonal_right expression','expression',2,'p_expression','yacc_Duino.py',47),
  ('expression -> diagonal_left expression','expression',2,'p_expression','yacc_Duino.py',48),
  ('expression -> procedure expression','expression',2,'p_expression','yacc_Duino.py',49),
  ('expression -> call expression','expression',2,'p_expression','yacc_Duino.py',50),
  ('expression -> empty','expression',1,'p_expression','yacc_Duino.py',51),
  ('declare -> DECLARE ID SEMICOLON','declare',3,'p_declare','yacc_Duino.py',55),
  ('declare -> DECLARE ID DEFAULT NUMBER SEMICOLON','declare',5,'p_declare','yacc_Duino.py',56),
  ('inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON','inCase',5,'p_inCase','yacc_Duino.py',64),
  ('inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON','inCase',6,'p_inCase','yacc_Duino.py',65),
  ('when1 -> WHEN ID CONDITION sentence THEN LBRACKET expression RBRACKET when1','when1',9,'p_when1','yacc_Duino.py',72),
  ('when1 -> empty','when1',1,'p_when1','yacc_Duino.py',73),
  ('when2 -> WHEN CONDITION sentence THEN LBRACKET expression RBRACKET when2','when2',8,'p_when2','yacc_Duino.py',81),
  ('when2 -> empty','when2',1,'p_when2','yacc_Duino.py',82),
  ('ifnot -> IFNOT LBRACKET expression RBRACKET','ifnot',4,'p_ifnot','yacc_Duino.py',86),
  ('sentence -> ID','sentence',1,'p_sentence','yacc_Duino.py',91),
  ('sentence -> NUMBER','sentence',1,'p_sentence','yacc_Duino.py',92),
  ('repeat -> REPEAT expression until_find SEMICOLON','repeat',4,'p_repeat','yacc_Duino.py',100),
  ('until_find -> TOFIND sentence CONDITION sentence','until_find',4,'p_until_find','yacc_Duino.py',105),
  ('since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON','since',9,'p_since','yacc_Duino.py',113),
  ('dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON','dot',9,'p_dot','yacc_Duino.py',117),
  ('increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON','increase',7,'p_increase','yacc_Duino.py',120),
  ('decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON','decrease',7,'p_decrease','yacc_Duino.py',125),
  ('initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON','initialize',5,'p_initialize','yacc_Duino.py',130),
  ('fill -> FILL LPAREN fillSentence RPAREN SEMICOLON','fill',5,'p_fill','yacc_Duino.py',135),
  ('fillSentence -> ID','fillSentence',1,'p_fillSentence','yacc_Duino.py',139),
  ('fillSentence -> NUMBER','fillSentence',1,'p_fillSentence','yacc_Duino.py',140),
  ('diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON','diagonal_left',5,'p_digonalleft','yacc_Duino.py',158),
  ('diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON','diagonal_right',5,'p_digonalright','yacc_Duino.py',161),
  ('empty -> <empty>','empty',0,'p_empty','yacc_Duino.py',164),
  ('localDeclare -> DECLARE ID SEMICOLON','localDeclare',3,'p_localDeclare','yacc_Duino.py',194),
  ('localDeclare -> DECLARE ID DEFAULT NUMBER SEMICOLON','localDeclare',5,'p_localDeclare','yacc_Duino.py',195),
  ('localExpression -> inCase localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',207),
  ('localExpression -> repeat localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',208),
  ('localExpression -> since localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',209),
  ('localExpression -> dot localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',210),
  ('localExpression -> initialize localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',211),
  ('localExpression -> fill localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',212),
  ('localExpression -> increase localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',213),
  ('localExpression -> decrease localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',214),
  ('localExpression -> diagonal_right localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',215),
  ('localExpression -> diagonal_left localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',216),
  ('localExpression -> procedure localExpression','localExpression',2,'p_localExpression','yacc_Duino.py',217),
  ('localExpression -> empty','localExpression',1,'p_localExpression','yacc_Duino.py',218),
  ('params -> oneParam','params',1,'p_params','yacc_Duino.py',222),
  ('params -> moreParam','params',1,'p_params','yacc_Duino.py',223),
  ('params -> empty','params',1,'p_params','yacc_Duino.py',224),
  ('oneParam -> ID params','oneParam',2,'p_oneParam','yacc_Duino.py',227),
  ('moreParam -> COMMA ID params','moreParam',3,'p_moreParam','yacc_Duino.py',232),
  ('procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON','procedure',11,'p_procedure','yacc_Duino.py',238),
  ('params_call -> oneParam_call','params_call',1,'p_params_call','yacc_Duino.py',245),
  ('params_call -> moreParam_call','params_call',1,'p_params_call','yacc_Duino.py',246),
  ('params_call -> empty','params_call',1,'p_params_call','yacc_Duino.py',247),
  ('oneParam_call -> ID params_call','oneParam_call',2,'p_oneParam_call','yacc_Duino.py',250),
  ('oneParam_call -> NUMBER params_call','oneParam_call',2,'p_oneParam_call','yacc_Duino.py',251),
  ('moreParam_call -> COMMA ID params_call','moreParam_call',3,'p_moreParam_call','yacc_Duino.py',255),
  ('moreParam_call -> COMMA NUMBER params_call','moreParam_call',3,'p_moreParam_call','yacc_Duino.py',256),
  ('call -> CALL ID LPAREN params_call RPAREN SEMICOLON','call',6,'p_call','yacc_Duino.py',260),
]
