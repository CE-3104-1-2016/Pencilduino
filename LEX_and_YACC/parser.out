Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> declare expression
Rule 2     expression -> inCase expression
Rule 3     expression -> repeat expression
Rule 4     expression -> since expression
Rule 5     expression -> dot expression
Rule 6     expression -> initialize expression
Rule 7     expression -> fill expression
Rule 8     expression -> increase expression
Rule 9     expression -> decrease expression
Rule 10    expression -> diagonal_right expression
Rule 11    expression -> diagonal_left expression
Rule 12    expression -> procedure expression
Rule 13    expression -> call expression
Rule 14    expression -> empty
Rule 15    declare -> DECLARE ID SEMICOLON
Rule 16    declare -> DECLARE ID DEFAULT NUMBER SEMICOLON
Rule 17    inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON
Rule 18    inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON
Rule 19    when1 -> WHEN ID CONDITION sentence_when1 THEN LBRACKET expression RBRACKET when1
Rule 20    when1 -> empty
Rule 21    when2 -> WHEN CONDITION sentence THEN LBRACKET expression RBRACKET when2
Rule 22    when2 -> empty
Rule 23    ifnot -> IFNOT LBRACKET expression RBRACKET
Rule 24    sentence -> ID
Rule 25    sentence -> NUMBER
Rule 26    sentence_when1 -> ID
Rule 27    sentence_when1 -> NUMBER
Rule 28    repeat -> REPEAT expression until_find SEMICOLON
Rule 29    until_find -> TOFIND sentence CONDITION sentence
Rule 30    since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
Rule 31    dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
Rule 32    increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
Rule 33    decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
Rule 34    initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON
Rule 35    fill -> FILL LPAREN fillSentence RPAREN SEMICOLON
Rule 36    fillSentence -> ID
Rule 37    fillSentence -> NUMBER
Rule 38    diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON
Rule 39    diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON
Rule 40    empty -> <empty>
Rule 41    localDeclare -> DECLARE ID SEMICOLON
Rule 42    localDeclare -> DECLARE ID DEFAULT NUMBER SEMICOLON
Rule 43    localExpression -> inCase localExpression
Rule 44    localExpression -> repeat localExpression
Rule 45    localExpression -> since localExpression
Rule 46    localExpression -> dot localExpression
Rule 47    localExpression -> initialize localExpression
Rule 48    localExpression -> fill localExpression
Rule 49    localExpression -> increase localExpression
Rule 50    localExpression -> decrease localExpression
Rule 51    localExpression -> diagonal_right localExpression
Rule 52    localExpression -> diagonal_left localExpression
Rule 53    localExpression -> procedure localExpression
Rule 54    localExpression -> empty
Rule 55    params -> oneParam
Rule 56    params -> moreParam
Rule 57    params -> empty
Rule 58    oneParam -> ID params
Rule 59    moreParam -> COMMA ID params
Rule 60    procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
Rule 61    params_call -> oneParam_call
Rule 62    params_call -> moreParam_call
Rule 63    params_call -> empty
Rule 64    oneParam_call -> ID params_call
Rule 65    oneParam_call -> NUMBER params_call
Rule 66    moreParam_call -> COMMA ID params_call
Rule 67    moreParam_call -> COMMA NUMBER params_call
Rule 68    call -> CALL ID LPAREN params_call RPAREN SEMICOLON

Terminals, with rules where they appear

CALL                 : 68
COLON                : 60
COLOR                : 31
COMMA                : 31 31 32 33 59 66 67
CONDITION            : 19 21 29 30
DECLARE              : 15 16 41 42
DECREASE             : 33
DEFAULT              : 16 42
DIAGL                : 38
DIAGR                : 39
DO                   : 30
DOT                  : 31
END                  : 60
ENDFROM              : 30
ENDINCASE            : 17 18
FILL                 : 35
FROM                 : 30
ID                   : 15 16 18 19 24 26 32 33 34 36 41 42 58 59 60 64 66 68
IFNOT                : 23
INCASE               : 17 18
INCREASE             : 32
INITIALIZE           : 34
LBRACKET             : 19 21 23
LPAREN               : 31 32 33 34 35 38 39 60 68
NUMBER               : 16 25 27 37 42 65 67
PROCEDURE            : 60
RBRACKET             : 19 21 23
REPEAT               : 28
RPAREN               : 31 32 33 34 35 38 39 60 68
SEMICOLON            : 15 16 17 18 28 30 31 32 33 34 35 38 39 41 42 60 68
START                : 60
THEN                 : 19 21
TOFIND               : 29
UNTIL                : 30
WHEN                 : 19 21
error                : 

Nonterminals, with rules where they appear

call                 : 13
declare              : 1 30
decrease             : 9 50
diagonal_left        : 11 52
diagonal_right       : 10 51
dot                  : 5 46
empty                : 14 20 22 54 57 63
expression           : 1 2 3 4 5 6 7 8 9 10 11 12 13 19 21 23 28 30 0
fill                 : 7 48
fillSentence         : 35
ifnot                : 17 18
inCase               : 2 43
increase             : 8 49
initialize           : 6 47
localDeclare         : 60
localExpression      : 43 44 45 46 47 48 49 50 51 52 53 60
moreParam            : 56
moreParam_call       : 62
oneParam             : 55
oneParam_call        : 61
params               : 58 59 60
params_call          : 64 65 66 67 68
procedure            : 12 53
repeat               : 3 44
sentence             : 21 29 29 30 31 31 32 33 38 39
sentence_when1       : 19
since                : 4 45
until_find           : 28
when1                : 17 19
when2                : 18 21

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 26
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 1

    (10) expression -> diagonal_right . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 29
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 2

    (14) expression -> empty .

    $end            reduce using rule 14 (expression -> empty .)
    TOFIND          reduce using rule 14 (expression -> empty .)
    RBRACKET        reduce using rule 14 (expression -> empty .)
    ENDFROM         reduce using rule 14 (expression -> empty .)


state 3

    (11) expression -> diagonal_left . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 30
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 4

    (34) initialize -> INITIALIZE . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 31


state 5

    (38) diagonal_left -> DIAGL . LPAREN sentence RPAREN SEMICOLON

    LPAREN          shift and go to state 32


state 6

    (17) inCase -> INCASE . when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> INCASE . ID when2 ifnot ENDINCASE SEMICOLON
    (19) when1 -> . WHEN ID CONDITION sentence_when1 THEN LBRACKET expression RBRACKET when1
    (20) when1 -> . empty
    (40) empty -> .

    ID              shift and go to state 35
    WHEN            shift and go to state 34
    IFNOT           reduce using rule 40 (empty -> .)

    empty                          shift and go to state 33
    when1                          shift and go to state 36

state 7

    (35) fill -> FILL . LPAREN fillSentence RPAREN SEMICOLON

    LPAREN          shift and go to state 37


state 8

    (9) expression -> decrease . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    fill                           shift and go to state 14
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    decrease                       shift and go to state 8
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 38
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 9

    (5) expression -> dot . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 39
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 10

    (8) expression -> increase . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 40
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 11

    (31) dot -> DOT . LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON

    LPAREN          shift and go to state 41


state 12

    (4) expression -> since . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 42
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 13

    (2) expression -> inCase . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 43
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 14

    (7) expression -> fill . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 44
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 15

    (60) procedure -> PROCEDURE . ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON

    ID              shift and go to state 45


state 16

    (12) expression -> procedure . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    inCase                         shift and go to state 13
    empty                          shift and go to state 2
    call                           shift and go to state 17
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    procedure                      shift and go to state 16
    dot                            shift and go to state 9
    declare                        shift and go to state 27
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 46
    since                          shift and go to state 12

state 17

    (13) expression -> call . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    declare                        shift and go to state 27
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    inCase                         shift and go to state 13
    expression                     shift and go to state 47
    since                          shift and go to state 12

state 18

    (33) decrease -> DECREASE . LPAREN ID COMMA sentence RPAREN SEMICOLON

    LPAREN          shift and go to state 48


state 19

    (28) repeat -> REPEAT . expression until_find SEMICOLON
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    TOFIND          reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 49
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 20

    (68) call -> CALL . ID LPAREN params_call RPAREN SEMICOLON

    ID              shift and go to state 50


state 21

    (3) expression -> repeat . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 51
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 22

    (39) diagonal_right -> DIAGR . LPAREN sentence RPAREN SEMICOLON

    LPAREN          shift and go to state 52


state 23

    (32) increase -> INCREASE . LPAREN ID COMMA sentence RPAREN SEMICOLON

    LPAREN          shift and go to state 53


state 24

    (6) expression -> initialize . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 54
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 25

    (30) since -> FROM . declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON

    DECLARE         shift and go to state 28

    declare                        shift and go to state 55

state 26

    (0) S' -> expression .



state 27

    (1) expression -> declare . expression
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    $end            reduce using rule 40 (empty -> .)
    TOFIND          reduce using rule 40 (empty -> .)
    RBRACKET        reduce using rule 40 (empty -> .)
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 56
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 28

    (15) declare -> DECLARE . ID SEMICOLON
    (16) declare -> DECLARE . ID DEFAULT NUMBER SEMICOLON

    ID              shift and go to state 57


state 29

    (10) expression -> diagonal_right expression .

    $end            reduce using rule 10 (expression -> diagonal_right expression .)
    TOFIND          reduce using rule 10 (expression -> diagonal_right expression .)
    RBRACKET        reduce using rule 10 (expression -> diagonal_right expression .)
    ENDFROM         reduce using rule 10 (expression -> diagonal_right expression .)


state 30

    (11) expression -> diagonal_left expression .

    $end            reduce using rule 11 (expression -> diagonal_left expression .)
    TOFIND          reduce using rule 11 (expression -> diagonal_left expression .)
    RBRACKET        reduce using rule 11 (expression -> diagonal_left expression .)
    ENDFROM         reduce using rule 11 (expression -> diagonal_left expression .)


state 31

    (34) initialize -> INITIALIZE LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 58


state 32

    (38) diagonal_left -> DIAGL LPAREN . sentence RPAREN SEMICOLON
    (24) sentence -> . ID
    (25) sentence -> . NUMBER

    ID              shift and go to state 61
    NUMBER          shift and go to state 60

    sentence                       shift and go to state 59

state 33

    (20) when1 -> empty .

    IFNOT           reduce using rule 20 (when1 -> empty .)


state 34

    (19) when1 -> WHEN . ID CONDITION sentence_when1 THEN LBRACKET expression RBRACKET when1

    ID              shift and go to state 62


state 35

    (18) inCase -> INCASE ID . when2 ifnot ENDINCASE SEMICOLON
    (21) when2 -> . WHEN CONDITION sentence THEN LBRACKET expression RBRACKET when2
    (22) when2 -> . empty
    (40) empty -> .

    WHEN            shift and go to state 65
    IFNOT           reduce using rule 40 (empty -> .)

    when2                          shift and go to state 64
    empty                          shift and go to state 63

state 36

    (17) inCase -> INCASE when1 . ifnot ENDINCASE SEMICOLON
    (23) ifnot -> . IFNOT LBRACKET expression RBRACKET

    IFNOT           shift and go to state 66

    ifnot                          shift and go to state 67

state 37

    (35) fill -> FILL LPAREN . fillSentence RPAREN SEMICOLON
    (36) fillSentence -> . ID
    (37) fillSentence -> . NUMBER

    ID              shift and go to state 70
    NUMBER          shift and go to state 68

    fillSentence                   shift and go to state 69

state 38

    (9) expression -> decrease expression .

    $end            reduce using rule 9 (expression -> decrease expression .)
    TOFIND          reduce using rule 9 (expression -> decrease expression .)
    RBRACKET        reduce using rule 9 (expression -> decrease expression .)
    ENDFROM         reduce using rule 9 (expression -> decrease expression .)


state 39

    (5) expression -> dot expression .

    $end            reduce using rule 5 (expression -> dot expression .)
    TOFIND          reduce using rule 5 (expression -> dot expression .)
    RBRACKET        reduce using rule 5 (expression -> dot expression .)
    ENDFROM         reduce using rule 5 (expression -> dot expression .)


state 40

    (8) expression -> increase expression .

    $end            reduce using rule 8 (expression -> increase expression .)
    TOFIND          reduce using rule 8 (expression -> increase expression .)
    RBRACKET        reduce using rule 8 (expression -> increase expression .)
    ENDFROM         reduce using rule 8 (expression -> increase expression .)


state 41

    (31) dot -> DOT LPAREN . sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (24) sentence -> . ID
    (25) sentence -> . NUMBER

    ID              shift and go to state 61
    NUMBER          shift and go to state 60

    sentence                       shift and go to state 71

state 42

    (4) expression -> since expression .

    $end            reduce using rule 4 (expression -> since expression .)
    TOFIND          reduce using rule 4 (expression -> since expression .)
    RBRACKET        reduce using rule 4 (expression -> since expression .)
    ENDFROM         reduce using rule 4 (expression -> since expression .)


state 43

    (2) expression -> inCase expression .

    $end            reduce using rule 2 (expression -> inCase expression .)
    TOFIND          reduce using rule 2 (expression -> inCase expression .)
    RBRACKET        reduce using rule 2 (expression -> inCase expression .)
    ENDFROM         reduce using rule 2 (expression -> inCase expression .)


state 44

    (7) expression -> fill expression .

    $end            reduce using rule 7 (expression -> fill expression .)
    TOFIND          reduce using rule 7 (expression -> fill expression .)
    RBRACKET        reduce using rule 7 (expression -> fill expression .)
    ENDFROM         reduce using rule 7 (expression -> fill expression .)


state 45

    (60) procedure -> PROCEDURE ID . LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON

    LPAREN          shift and go to state 72


state 46

    (12) expression -> procedure expression .

    $end            reduce using rule 12 (expression -> procedure expression .)
    TOFIND          reduce using rule 12 (expression -> procedure expression .)
    RBRACKET        reduce using rule 12 (expression -> procedure expression .)
    ENDFROM         reduce using rule 12 (expression -> procedure expression .)


state 47

    (13) expression -> call expression .

    $end            reduce using rule 13 (expression -> call expression .)
    TOFIND          reduce using rule 13 (expression -> call expression .)
    RBRACKET        reduce using rule 13 (expression -> call expression .)
    ENDFROM         reduce using rule 13 (expression -> call expression .)


state 48

    (33) decrease -> DECREASE LPAREN . ID COMMA sentence RPAREN SEMICOLON

    ID              shift and go to state 73


state 49

    (28) repeat -> REPEAT expression . until_find SEMICOLON
    (29) until_find -> . TOFIND sentence CONDITION sentence

    TOFIND          shift and go to state 75

    until_find                     shift and go to state 74

state 50

    (68) call -> CALL ID . LPAREN params_call RPAREN SEMICOLON

    LPAREN          shift and go to state 76


state 51

    (3) expression -> repeat expression .

    $end            reduce using rule 3 (expression -> repeat expression .)
    TOFIND          reduce using rule 3 (expression -> repeat expression .)
    RBRACKET        reduce using rule 3 (expression -> repeat expression .)
    ENDFROM         reduce using rule 3 (expression -> repeat expression .)


state 52

    (39) diagonal_right -> DIAGR LPAREN . sentence RPAREN SEMICOLON
    (24) sentence -> . ID
    (25) sentence -> . NUMBER

    ID              shift and go to state 61
    NUMBER          shift and go to state 60

    sentence                       shift and go to state 77

state 53

    (32) increase -> INCREASE LPAREN . ID COMMA sentence RPAREN SEMICOLON

    ID              shift and go to state 78


state 54

    (6) expression -> initialize expression .

    $end            reduce using rule 6 (expression -> initialize expression .)
    TOFIND          reduce using rule 6 (expression -> initialize expression .)
    RBRACKET        reduce using rule 6 (expression -> initialize expression .)
    ENDFROM         reduce using rule 6 (expression -> initialize expression .)


state 55

    (30) since -> FROM declare . UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON

    UNTIL           shift and go to state 79


state 56

    (1) expression -> declare expression .

    $end            reduce using rule 1 (expression -> declare expression .)
    TOFIND          reduce using rule 1 (expression -> declare expression .)
    RBRACKET        reduce using rule 1 (expression -> declare expression .)
    ENDFROM         reduce using rule 1 (expression -> declare expression .)


state 57

    (15) declare -> DECLARE ID . SEMICOLON
    (16) declare -> DECLARE ID . DEFAULT NUMBER SEMICOLON

    SEMICOLON       shift and go to state 81
    DEFAULT         shift and go to state 80


state 58

    (34) initialize -> INITIALIZE LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 82


state 59

    (38) diagonal_left -> DIAGL LPAREN sentence . RPAREN SEMICOLON

    RPAREN          shift and go to state 83


state 60

    (25) sentence -> NUMBER .

    RPAREN          reduce using rule 25 (sentence -> NUMBER .)
    CONDITION       reduce using rule 25 (sentence -> NUMBER .)
    DO              reduce using rule 25 (sentence -> NUMBER .)
    COMMA           reduce using rule 25 (sentence -> NUMBER .)
    THEN            reduce using rule 25 (sentence -> NUMBER .)
    SEMICOLON       reduce using rule 25 (sentence -> NUMBER .)


state 61

    (24) sentence -> ID .

    RPAREN          reduce using rule 24 (sentence -> ID .)
    CONDITION       reduce using rule 24 (sentence -> ID .)
    DO              reduce using rule 24 (sentence -> ID .)
    COMMA           reduce using rule 24 (sentence -> ID .)
    THEN            reduce using rule 24 (sentence -> ID .)
    SEMICOLON       reduce using rule 24 (sentence -> ID .)


state 62

    (19) when1 -> WHEN ID . CONDITION sentence_when1 THEN LBRACKET expression RBRACKET when1

    CONDITION       shift and go to state 84


state 63

    (22) when2 -> empty .

    IFNOT           reduce using rule 22 (when2 -> empty .)


state 64

    (18) inCase -> INCASE ID when2 . ifnot ENDINCASE SEMICOLON
    (23) ifnot -> . IFNOT LBRACKET expression RBRACKET

    IFNOT           shift and go to state 66

    ifnot                          shift and go to state 85

state 65

    (21) when2 -> WHEN . CONDITION sentence THEN LBRACKET expression RBRACKET when2

    CONDITION       shift and go to state 86


state 66

    (23) ifnot -> IFNOT . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 87


state 67

    (17) inCase -> INCASE when1 ifnot . ENDINCASE SEMICOLON

    ENDINCASE       shift and go to state 88


state 68

    (37) fillSentence -> NUMBER .

    RPAREN          reduce using rule 37 (fillSentence -> NUMBER .)


state 69

    (35) fill -> FILL LPAREN fillSentence . RPAREN SEMICOLON

    RPAREN          shift and go to state 89


state 70

    (36) fillSentence -> ID .

    RPAREN          reduce using rule 36 (fillSentence -> ID .)


state 71

    (31) dot -> DOT LPAREN sentence . COMMA sentence COMMA COLOR RPAREN SEMICOLON

    COMMA           shift and go to state 90


state 72

    (60) procedure -> PROCEDURE ID LPAREN . params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (55) params -> . oneParam
    (56) params -> . moreParam
    (57) params -> . empty
    (58) oneParam -> . ID params
    (59) moreParam -> . COMMA ID params
    (40) empty -> .

    ID              shift and go to state 96
    COMMA           shift and go to state 95
    RPAREN          reduce using rule 40 (empty -> .)

    moreParam                      shift and go to state 91
    oneParam                       shift and go to state 92
    params                         shift and go to state 93
    empty                          shift and go to state 94

state 73

    (33) decrease -> DECREASE LPAREN ID . COMMA sentence RPAREN SEMICOLON

    COMMA           shift and go to state 97


state 74

    (28) repeat -> REPEAT expression until_find . SEMICOLON

    SEMICOLON       shift and go to state 98


state 75

    (29) until_find -> TOFIND . sentence CONDITION sentence
    (24) sentence -> . ID
    (25) sentence -> . NUMBER

    ID              shift and go to state 61
    NUMBER          shift and go to state 60

    sentence                       shift and go to state 99

state 76

    (68) call -> CALL ID LPAREN . params_call RPAREN SEMICOLON
    (61) params_call -> . oneParam_call
    (62) params_call -> . moreParam_call
    (63) params_call -> . empty
    (64) oneParam_call -> . ID params_call
    (65) oneParam_call -> . NUMBER params_call
    (66) moreParam_call -> . COMMA ID params_call
    (67) moreParam_call -> . COMMA NUMBER params_call
    (40) empty -> .

    ID              shift and go to state 106
    NUMBER          shift and go to state 102
    COMMA           shift and go to state 100
    RPAREN          reduce using rule 40 (empty -> .)

    empty                          shift and go to state 103
    moreParam_call                 shift and go to state 104
    params_call                    shift and go to state 101
    oneParam_call                  shift and go to state 105

state 77

    (39) diagonal_right -> DIAGR LPAREN sentence . RPAREN SEMICOLON

    RPAREN          shift and go to state 107


state 78

    (32) increase -> INCREASE LPAREN ID . COMMA sentence RPAREN SEMICOLON

    COMMA           shift and go to state 108


state 79

    (30) since -> FROM declare UNTIL . CONDITION sentence DO expression ENDFROM SEMICOLON

    CONDITION       shift and go to state 109


state 80

    (16) declare -> DECLARE ID DEFAULT . NUMBER SEMICOLON

    NUMBER          shift and go to state 110


state 81

    (15) declare -> DECLARE ID SEMICOLON .

    DECLARE         reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    INCASE          reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    REPEAT          reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    FROM            reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    DOT             reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    INITIALIZE      reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    FILL            reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    INCREASE        reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    DECREASE        reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    DIAGR           reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    DIAGL           reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    PROCEDURE       reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    CALL            reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    $end            reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    TOFIND          reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    RBRACKET        reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    ENDFROM         reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)
    UNTIL           reduce using rule 15 (declare -> DECLARE ID SEMICOLON .)


state 82

    (34) initialize -> INITIALIZE LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 111


state 83

    (38) diagonal_left -> DIAGL LPAREN sentence RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 112


state 84

    (19) when1 -> WHEN ID CONDITION . sentence_when1 THEN LBRACKET expression RBRACKET when1
    (26) sentence_when1 -> . ID
    (27) sentence_when1 -> . NUMBER

    ID              shift and go to state 115
    NUMBER          shift and go to state 113

    sentence_when1                 shift and go to state 114

state 85

    (18) inCase -> INCASE ID when2 ifnot . ENDINCASE SEMICOLON

    ENDINCASE       shift and go to state 116


state 86

    (21) when2 -> WHEN CONDITION . sentence THEN LBRACKET expression RBRACKET when2
    (24) sentence -> . ID
    (25) sentence -> . NUMBER

    ID              shift and go to state 61
    NUMBER          shift and go to state 60

    sentence                       shift and go to state 117

state 87

    (23) ifnot -> IFNOT LBRACKET . expression RBRACKET
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    RBRACKET        reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 118
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 88

    (17) inCase -> INCASE when1 ifnot ENDINCASE . SEMICOLON

    SEMICOLON       shift and go to state 119


state 89

    (35) fill -> FILL LPAREN fillSentence RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 120


state 90

    (31) dot -> DOT LPAREN sentence COMMA . sentence COMMA COLOR RPAREN SEMICOLON
    (24) sentence -> . ID
    (25) sentence -> . NUMBER

    ID              shift and go to state 61
    NUMBER          shift and go to state 60

    sentence                       shift and go to state 121

state 91

    (56) params -> moreParam .

    RPAREN          reduce using rule 56 (params -> moreParam .)


state 92

    (55) params -> oneParam .

    RPAREN          reduce using rule 55 (params -> oneParam .)


state 93

    (60) procedure -> PROCEDURE ID LPAREN params . RPAREN localDeclare START COLON localExpression END SEMICOLON

    RPAREN          shift and go to state 122


state 94

    (57) params -> empty .

    RPAREN          reduce using rule 57 (params -> empty .)


state 95

    (59) moreParam -> COMMA . ID params

    ID              shift and go to state 123


state 96

    (58) oneParam -> ID . params
    (55) params -> . oneParam
    (56) params -> . moreParam
    (57) params -> . empty
    (58) oneParam -> . ID params
    (59) moreParam -> . COMMA ID params
    (40) empty -> .

    ID              shift and go to state 96
    COMMA           shift and go to state 95
    RPAREN          reduce using rule 40 (empty -> .)

    moreParam                      shift and go to state 91
    oneParam                       shift and go to state 92
    params                         shift and go to state 124
    empty                          shift and go to state 94

state 97

    (33) decrease -> DECREASE LPAREN ID COMMA . sentence RPAREN SEMICOLON
    (24) sentence -> . ID
    (25) sentence -> . NUMBER

    ID              shift and go to state 61
    NUMBER          shift and go to state 60

    sentence                       shift and go to state 125

state 98

    (28) repeat -> REPEAT expression until_find SEMICOLON .

    DECLARE         reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    INCASE          reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    REPEAT          reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    FROM            reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    DOT             reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    INITIALIZE      reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    FILL            reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    INCREASE        reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    DECREASE        reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    DIAGR           reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    DIAGL           reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    PROCEDURE       reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    CALL            reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    $end            reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    TOFIND          reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    RBRACKET        reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    ENDFROM         reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)
    END             reduce using rule 28 (repeat -> REPEAT expression until_find SEMICOLON .)


state 99

    (29) until_find -> TOFIND sentence . CONDITION sentence

    CONDITION       shift and go to state 126


state 100

    (66) moreParam_call -> COMMA . ID params_call
    (67) moreParam_call -> COMMA . NUMBER params_call

    ID              shift and go to state 128
    NUMBER          shift and go to state 127


state 101

    (68) call -> CALL ID LPAREN params_call . RPAREN SEMICOLON

    RPAREN          shift and go to state 129


state 102

    (65) oneParam_call -> NUMBER . params_call
    (61) params_call -> . oneParam_call
    (62) params_call -> . moreParam_call
    (63) params_call -> . empty
    (64) oneParam_call -> . ID params_call
    (65) oneParam_call -> . NUMBER params_call
    (66) moreParam_call -> . COMMA ID params_call
    (67) moreParam_call -> . COMMA NUMBER params_call
    (40) empty -> .

    ID              shift and go to state 106
    NUMBER          shift and go to state 102
    COMMA           shift and go to state 100
    RPAREN          reduce using rule 40 (empty -> .)

    empty                          shift and go to state 103
    moreParam_call                 shift and go to state 104
    params_call                    shift and go to state 130
    oneParam_call                  shift and go to state 105

state 103

    (63) params_call -> empty .

    RPAREN          reduce using rule 63 (params_call -> empty .)


state 104

    (62) params_call -> moreParam_call .

    RPAREN          reduce using rule 62 (params_call -> moreParam_call .)


state 105

    (61) params_call -> oneParam_call .

    RPAREN          reduce using rule 61 (params_call -> oneParam_call .)


state 106

    (64) oneParam_call -> ID . params_call
    (61) params_call -> . oneParam_call
    (62) params_call -> . moreParam_call
    (63) params_call -> . empty
    (64) oneParam_call -> . ID params_call
    (65) oneParam_call -> . NUMBER params_call
    (66) moreParam_call -> . COMMA ID params_call
    (67) moreParam_call -> . COMMA NUMBER params_call
    (40) empty -> .

    ID              shift and go to state 106
    NUMBER          shift and go to state 102
    COMMA           shift and go to state 100
    RPAREN          reduce using rule 40 (empty -> .)

    empty                          shift and go to state 103
    moreParam_call                 shift and go to state 104
    params_call                    shift and go to state 131
    oneParam_call                  shift and go to state 105

state 107

    (39) diagonal_right -> DIAGR LPAREN sentence RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 132


state 108

    (32) increase -> INCREASE LPAREN ID COMMA . sentence RPAREN SEMICOLON
    (24) sentence -> . ID
    (25) sentence -> . NUMBER

    ID              shift and go to state 61
    NUMBER          shift and go to state 60

    sentence                       shift and go to state 133

state 109

    (30) since -> FROM declare UNTIL CONDITION . sentence DO expression ENDFROM SEMICOLON
    (24) sentence -> . ID
    (25) sentence -> . NUMBER

    ID              shift and go to state 61
    NUMBER          shift and go to state 60

    sentence                       shift and go to state 134

state 110

    (16) declare -> DECLARE ID DEFAULT NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 135


state 111

    (34) initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .

    DECLARE         reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    INCASE          reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    REPEAT          reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    FROM            reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    DOT             reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    INITIALIZE      reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    FILL            reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    INCREASE        reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    DECREASE        reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    DIAGR           reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    DIAGL           reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    PROCEDURE       reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    CALL            reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    $end            reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    TOFIND          reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    ENDFROM         reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)
    END             reduce using rule 34 (initialize -> INITIALIZE LPAREN ID RPAREN SEMICOLON .)


state 112

    (38) diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .

    DECLARE         reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    INCASE          reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    REPEAT          reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    FROM            reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    DOT             reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    INITIALIZE      reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    FILL            reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    INCREASE        reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    DECREASE        reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    DIAGR           reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    DIAGL           reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    PROCEDURE       reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    CALL            reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    $end            reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    TOFIND          reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    ENDFROM         reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)
    END             reduce using rule 38 (diagonal_left -> DIAGL LPAREN sentence RPAREN SEMICOLON .)


state 113

    (27) sentence_when1 -> NUMBER .

    THEN            reduce using rule 27 (sentence_when1 -> NUMBER .)


state 114

    (19) when1 -> WHEN ID CONDITION sentence_when1 . THEN LBRACKET expression RBRACKET when1

    THEN            shift and go to state 136


state 115

    (26) sentence_when1 -> ID .

    THEN            reduce using rule 26 (sentence_when1 -> ID .)


state 116

    (18) inCase -> INCASE ID when2 ifnot ENDINCASE . SEMICOLON

    SEMICOLON       shift and go to state 137


state 117

    (21) when2 -> WHEN CONDITION sentence . THEN LBRACKET expression RBRACKET when2

    THEN            shift and go to state 138


state 118

    (23) ifnot -> IFNOT LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 139


state 119

    (17) inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .

    INCASE          reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    REPEAT          reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    FROM            reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    DOT             reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    INITIALIZE      reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    FILL            reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    INCREASE        reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    DECREASE        reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    DIAGR           reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    DIAGL           reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    PROCEDURE       reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    END             reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    DECLARE         reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    CALL            reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    $end            reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    TOFIND          reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    RBRACKET        reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)
    ENDFROM         reduce using rule 17 (inCase -> INCASE when1 ifnot ENDINCASE SEMICOLON .)


state 120

    (35) fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .

    DECLARE         reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    INCASE          reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    REPEAT          reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    FROM            reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    DOT             reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    INITIALIZE      reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    FILL            reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    INCREASE        reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    DECREASE        reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    DIAGR           reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    DIAGL           reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    PROCEDURE       reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    CALL            reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    $end            reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    TOFIND          reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    ENDFROM         reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)
    END             reduce using rule 35 (fill -> FILL LPAREN fillSentence RPAREN SEMICOLON .)


state 121

    (31) dot -> DOT LPAREN sentence COMMA sentence . COMMA COLOR RPAREN SEMICOLON

    COMMA           shift and go to state 140


state 122

    (60) procedure -> PROCEDURE ID LPAREN params RPAREN . localDeclare START COLON localExpression END SEMICOLON
    (41) localDeclare -> . DECLARE ID SEMICOLON
    (42) localDeclare -> . DECLARE ID DEFAULT NUMBER SEMICOLON

    DECLARE         shift and go to state 142

    localDeclare                   shift and go to state 141

state 123

    (59) moreParam -> COMMA ID . params
    (55) params -> . oneParam
    (56) params -> . moreParam
    (57) params -> . empty
    (58) oneParam -> . ID params
    (59) moreParam -> . COMMA ID params
    (40) empty -> .

    ID              shift and go to state 96
    COMMA           shift and go to state 95
    RPAREN          reduce using rule 40 (empty -> .)

    moreParam                      shift and go to state 91
    oneParam                       shift and go to state 92
    params                         shift and go to state 143
    empty                          shift and go to state 94

state 124

    (58) oneParam -> ID params .

    RPAREN          reduce using rule 58 (oneParam -> ID params .)


state 125

    (33) decrease -> DECREASE LPAREN ID COMMA sentence . RPAREN SEMICOLON

    RPAREN          shift and go to state 144


state 126

    (29) until_find -> TOFIND sentence CONDITION . sentence
    (24) sentence -> . ID
    (25) sentence -> . NUMBER

    ID              shift and go to state 61
    NUMBER          shift and go to state 60

    sentence                       shift and go to state 145

state 127

    (67) moreParam_call -> COMMA NUMBER . params_call
    (61) params_call -> . oneParam_call
    (62) params_call -> . moreParam_call
    (63) params_call -> . empty
    (64) oneParam_call -> . ID params_call
    (65) oneParam_call -> . NUMBER params_call
    (66) moreParam_call -> . COMMA ID params_call
    (67) moreParam_call -> . COMMA NUMBER params_call
    (40) empty -> .

    ID              shift and go to state 106
    NUMBER          shift and go to state 102
    COMMA           shift and go to state 100
    RPAREN          reduce using rule 40 (empty -> .)

    empty                          shift and go to state 103
    moreParam_call                 shift and go to state 104
    params_call                    shift and go to state 146
    oneParam_call                  shift and go to state 105

state 128

    (66) moreParam_call -> COMMA ID . params_call
    (61) params_call -> . oneParam_call
    (62) params_call -> . moreParam_call
    (63) params_call -> . empty
    (64) oneParam_call -> . ID params_call
    (65) oneParam_call -> . NUMBER params_call
    (66) moreParam_call -> . COMMA ID params_call
    (67) moreParam_call -> . COMMA NUMBER params_call
    (40) empty -> .

    ID              shift and go to state 106
    NUMBER          shift and go to state 102
    COMMA           shift and go to state 100
    RPAREN          reduce using rule 40 (empty -> .)

    empty                          shift and go to state 103
    moreParam_call                 shift and go to state 104
    params_call                    shift and go to state 147
    oneParam_call                  shift and go to state 105

state 129

    (68) call -> CALL ID LPAREN params_call RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 148


state 130

    (65) oneParam_call -> NUMBER params_call .

    RPAREN          reduce using rule 65 (oneParam_call -> NUMBER params_call .)


state 131

    (64) oneParam_call -> ID params_call .

    RPAREN          reduce using rule 64 (oneParam_call -> ID params_call .)


state 132

    (39) diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .

    INCASE          reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    REPEAT          reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    FROM            reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    DOT             reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    INITIALIZE      reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    FILL            reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    INCREASE        reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    DECREASE        reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    DIAGR           reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    DIAGL           reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    PROCEDURE       reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    END             reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    DECLARE         reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    CALL            reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    $end            reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    TOFIND          reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)
    ENDFROM         reduce using rule 39 (diagonal_right -> DIAGR LPAREN sentence RPAREN SEMICOLON .)


state 133

    (32) increase -> INCREASE LPAREN ID COMMA sentence . RPAREN SEMICOLON

    RPAREN          shift and go to state 149


state 134

    (30) since -> FROM declare UNTIL CONDITION sentence . DO expression ENDFROM SEMICOLON

    DO              shift and go to state 150


state 135

    (16) declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .

    DECLARE         reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    INCASE          reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    REPEAT          reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    FROM            reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    DOT             reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    INITIALIZE      reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    FILL            reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    INCREASE        reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    DECREASE        reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    DIAGR           reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    DIAGL           reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    PROCEDURE       reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    CALL            reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    $end            reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    TOFIND          reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    RBRACKET        reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    ENDFROM         reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)
    UNTIL           reduce using rule 16 (declare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)


state 136

    (19) when1 -> WHEN ID CONDITION sentence_when1 THEN . LBRACKET expression RBRACKET when1

    LBRACKET        shift and go to state 151


state 137

    (18) inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .

    INCASE          reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    REPEAT          reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    FROM            reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    DOT             reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    INITIALIZE      reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    FILL            reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    INCREASE        reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    DECREASE        reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    DIAGR           reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    DIAGL           reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    PROCEDURE       reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    END             reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    DECLARE         reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    CALL            reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    $end            reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    TOFIND          reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    RBRACKET        reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)
    ENDFROM         reduce using rule 18 (inCase -> INCASE ID when2 ifnot ENDINCASE SEMICOLON .)


state 138

    (21) when2 -> WHEN CONDITION sentence THEN . LBRACKET expression RBRACKET when2

    LBRACKET        shift and go to state 152


state 139

    (23) ifnot -> IFNOT LBRACKET expression RBRACKET .

    ENDINCASE       reduce using rule 23 (ifnot -> IFNOT LBRACKET expression RBRACKET .)


state 140

    (31) dot -> DOT LPAREN sentence COMMA sentence COMMA . COLOR RPAREN SEMICOLON

    COLOR           shift and go to state 153


state 141

    (60) procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare . START COLON localExpression END SEMICOLON

    START           shift and go to state 154


state 142

    (41) localDeclare -> DECLARE . ID SEMICOLON
    (42) localDeclare -> DECLARE . ID DEFAULT NUMBER SEMICOLON

    ID              shift and go to state 155


state 143

    (59) moreParam -> COMMA ID params .

    RPAREN          reduce using rule 59 (moreParam -> COMMA ID params .)


state 144

    (33) decrease -> DECREASE LPAREN ID COMMA sentence RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 156


state 145

    (29) until_find -> TOFIND sentence CONDITION sentence .

    SEMICOLON       reduce using rule 29 (until_find -> TOFIND sentence CONDITION sentence .)


state 146

    (67) moreParam_call -> COMMA NUMBER params_call .

    RPAREN          reduce using rule 67 (moreParam_call -> COMMA NUMBER params_call .)


state 147

    (66) moreParam_call -> COMMA ID params_call .

    RPAREN          reduce using rule 66 (moreParam_call -> COMMA ID params_call .)


state 148

    (68) call -> CALL ID LPAREN params_call RPAREN SEMICOLON .

    DECLARE         reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    INCASE          reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    REPEAT          reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    FROM            reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    DOT             reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    INITIALIZE      reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    FILL            reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    INCREASE        reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    DECREASE        reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    DIAGR           reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    DIAGL           reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    PROCEDURE       reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    CALL            reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    $end            reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    TOFIND          reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)
    ENDFROM         reduce using rule 68 (call -> CALL ID LPAREN params_call RPAREN SEMICOLON .)


state 149

    (32) increase -> INCREASE LPAREN ID COMMA sentence RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 157


state 150

    (30) since -> FROM declare UNTIL CONDITION sentence DO . expression ENDFROM SEMICOLON
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    ENDFROM         reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 158
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 151

    (19) when1 -> WHEN ID CONDITION sentence_when1 THEN LBRACKET . expression RBRACKET when1
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    RBRACKET        reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    diagonal_left                  shift and go to state 3
    fill                           shift and go to state 14
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    declare                        shift and go to state 27
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 159
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 152

    (21) when2 -> WHEN CONDITION sentence THEN LBRACKET . expression RBRACKET when2
    (1) expression -> . declare expression
    (2) expression -> . inCase expression
    (3) expression -> . repeat expression
    (4) expression -> . since expression
    (5) expression -> . dot expression
    (6) expression -> . initialize expression
    (7) expression -> . fill expression
    (8) expression -> . increase expression
    (9) expression -> . decrease expression
    (10) expression -> . diagonal_right expression
    (11) expression -> . diagonal_left expression
    (12) expression -> . procedure expression
    (13) expression -> . call expression
    (14) expression -> . empty
    (15) declare -> . DECLARE ID SEMICOLON
    (16) declare -> . DECLARE ID DEFAULT NUMBER SEMICOLON
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (68) call -> . CALL ID LPAREN params_call RPAREN SEMICOLON
    (40) empty -> .

    DECLARE         shift and go to state 28
    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    CALL            shift and go to state 20
    RBRACKET        reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 8
    diagonal_right                 shift and go to state 1
    procedure                      shift and go to state 16
    empty                          shift and go to state 2
    call                           shift and go to state 17
    declare                        shift and go to state 27
    fill                           shift and go to state 14
    diagonal_left                  shift and go to state 3
    repeat                         shift and go to state 21
    dot                            shift and go to state 9
    increase                       shift and go to state 10
    initialize                     shift and go to state 24
    expression                     shift and go to state 160
    since                          shift and go to state 12
    inCase                         shift and go to state 13

state 153

    (31) dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR . RPAREN SEMICOLON

    RPAREN          shift and go to state 161


state 154

    (60) procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START . COLON localExpression END SEMICOLON

    COLON           shift and go to state 162


state 155

    (41) localDeclare -> DECLARE ID . SEMICOLON
    (42) localDeclare -> DECLARE ID . DEFAULT NUMBER SEMICOLON

    SEMICOLON       shift and go to state 164
    DEFAULT         shift and go to state 163


state 156

    (33) decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .

    INCASE          reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    REPEAT          reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    FROM            reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    DOT             reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    INITIALIZE      reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    FILL            reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    INCREASE        reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    DECREASE        reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    DIAGR           reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    DIAGL           reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    PROCEDURE       reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    END             reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    DECLARE         reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    CALL            reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    $end            reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    TOFIND          reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    ENDFROM         reduce using rule 33 (decrease -> DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)


state 157

    (32) increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .

    INCASE          reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    REPEAT          reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    FROM            reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    DOT             reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    INITIALIZE      reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    FILL            reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    INCREASE        reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    DECREASE        reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    DIAGR           reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    DIAGL           reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    PROCEDURE       reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    END             reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    DECLARE         reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    CALL            reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    $end            reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    TOFIND          reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)
    ENDFROM         reduce using rule 32 (increase -> INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON .)


state 158

    (30) since -> FROM declare UNTIL CONDITION sentence DO expression . ENDFROM SEMICOLON

    ENDFROM         shift and go to state 165


state 159

    (19) when1 -> WHEN ID CONDITION sentence_when1 THEN LBRACKET expression . RBRACKET when1

    RBRACKET        shift and go to state 166


state 160

    (21) when2 -> WHEN CONDITION sentence THEN LBRACKET expression . RBRACKET when2

    RBRACKET        shift and go to state 167


state 161

    (31) dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 168


state 162

    (60) procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON . localExpression END SEMICOLON
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 172
    diagonal_right                 shift and go to state 169
    inCase                         shift and go to state 179
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    fill                           shift and go to state 178
    repeat                         shift and go to state 180
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 175
    since                          shift and go to state 176
    procedure                      shift and go to state 177

state 163

    (42) localDeclare -> DECLARE ID DEFAULT . NUMBER SEMICOLON

    NUMBER          shift and go to state 182


state 164

    (41) localDeclare -> DECLARE ID SEMICOLON .

    START           reduce using rule 41 (localDeclare -> DECLARE ID SEMICOLON .)


state 165

    (30) since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM . SEMICOLON

    SEMICOLON       shift and go to state 183


state 166

    (19) when1 -> WHEN ID CONDITION sentence_when1 THEN LBRACKET expression RBRACKET . when1
    (19) when1 -> . WHEN ID CONDITION sentence_when1 THEN LBRACKET expression RBRACKET when1
    (20) when1 -> . empty
    (40) empty -> .

    WHEN            shift and go to state 34
    IFNOT           reduce using rule 40 (empty -> .)

    empty                          shift and go to state 33
    when1                          shift and go to state 184

state 167

    (21) when2 -> WHEN CONDITION sentence THEN LBRACKET expression RBRACKET . when2
    (21) when2 -> . WHEN CONDITION sentence THEN LBRACKET expression RBRACKET when2
    (22) when2 -> . empty
    (40) empty -> .

    WHEN            shift and go to state 65
    IFNOT           reduce using rule 40 (empty -> .)

    when2                          shift and go to state 185
    empty                          shift and go to state 63

state 168

    (31) dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .

    DECLARE         reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    INCASE          reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    REPEAT          reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    FROM            reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    DOT             reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    INITIALIZE      reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    FILL            reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    INCREASE        reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    DECREASE        reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    DIAGR           reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    DIAGL           reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    PROCEDURE       reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    CALL            reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    $end            reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    TOFIND          reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    ENDFROM         reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)
    END             reduce using rule 31 (dot -> DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON .)


state 169

    (51) localExpression -> diagonal_right . localExpression
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 172
    diagonal_right                 shift and go to state 169
    inCase                         shift and go to state 179
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    fill                           shift and go to state 178
    repeat                         shift and go to state 180
    procedure                      shift and go to state 177
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 186
    since                          shift and go to state 176

state 170

    (54) localExpression -> empty .

    END             reduce using rule 54 (localExpression -> empty .)


state 171

    (52) localExpression -> diagonal_left . localExpression
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 172
    diagonal_right                 shift and go to state 169
    inCase                         shift and go to state 179
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    fill                           shift and go to state 178
    repeat                         shift and go to state 180
    procedure                      shift and go to state 177
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 187
    since                          shift and go to state 176

state 172

    (50) localExpression -> decrease . localExpression
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    fill                           shift and go to state 178
    diagonal_right                 shift and go to state 169
    inCase                         shift and go to state 179
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    decrease                       shift and go to state 172
    repeat                         shift and go to state 180
    procedure                      shift and go to state 177
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 188
    since                          shift and go to state 176

state 173

    (46) localExpression -> dot . localExpression
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 172
    diagonal_right                 shift and go to state 169
    inCase                         shift and go to state 179
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    fill                           shift and go to state 178
    repeat                         shift and go to state 180
    procedure                      shift and go to state 177
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 189
    since                          shift and go to state 176

state 174

    (49) localExpression -> increase . localExpression
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 172
    diagonal_right                 shift and go to state 169
    inCase                         shift and go to state 179
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    fill                           shift and go to state 178
    repeat                         shift and go to state 180
    procedure                      shift and go to state 177
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 190
    since                          shift and go to state 176

state 175

    (60) procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression . END SEMICOLON

    END             shift and go to state 191


state 176

    (45) localExpression -> since . localExpression
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 172
    diagonal_right                 shift and go to state 169
    inCase                         shift and go to state 179
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    fill                           shift and go to state 178
    repeat                         shift and go to state 180
    procedure                      shift and go to state 177
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 192
    since                          shift and go to state 176

state 177

    (53) localExpression -> procedure . localExpression
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 172
    diagonal_right                 shift and go to state 169
    procedure                      shift and go to state 177
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    fill                           shift and go to state 178
    repeat                         shift and go to state 180
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 193
    inCase                         shift and go to state 179
    since                          shift and go to state 176

state 178

    (48) localExpression -> fill . localExpression
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 172
    diagonal_right                 shift and go to state 169
    inCase                         shift and go to state 179
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    fill                           shift and go to state 178
    repeat                         shift and go to state 180
    procedure                      shift and go to state 177
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 194
    since                          shift and go to state 176

state 179

    (43) localExpression -> inCase . localExpression
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 172
    diagonal_right                 shift and go to state 169
    inCase                         shift and go to state 179
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    fill                           shift and go to state 178
    repeat                         shift and go to state 180
    procedure                      shift and go to state 177
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 195
    since                          shift and go to state 176

state 180

    (44) localExpression -> repeat . localExpression
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 172
    diagonal_right                 shift and go to state 169
    inCase                         shift and go to state 179
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    fill                           shift and go to state 178
    repeat                         shift and go to state 180
    procedure                      shift and go to state 177
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 196
    since                          shift and go to state 176

state 181

    (47) localExpression -> initialize . localExpression
    (43) localExpression -> . inCase localExpression
    (44) localExpression -> . repeat localExpression
    (45) localExpression -> . since localExpression
    (46) localExpression -> . dot localExpression
    (47) localExpression -> . initialize localExpression
    (48) localExpression -> . fill localExpression
    (49) localExpression -> . increase localExpression
    (50) localExpression -> . decrease localExpression
    (51) localExpression -> . diagonal_right localExpression
    (52) localExpression -> . diagonal_left localExpression
    (53) localExpression -> . procedure localExpression
    (54) localExpression -> . empty
    (17) inCase -> . INCASE when1 ifnot ENDINCASE SEMICOLON
    (18) inCase -> . INCASE ID when2 ifnot ENDINCASE SEMICOLON
    (28) repeat -> . REPEAT expression until_find SEMICOLON
    (30) since -> . FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON
    (31) dot -> . DOT LPAREN sentence COMMA sentence COMMA COLOR RPAREN SEMICOLON
    (34) initialize -> . INITIALIZE LPAREN ID RPAREN SEMICOLON
    (35) fill -> . FILL LPAREN fillSentence RPAREN SEMICOLON
    (32) increase -> . INCREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (33) decrease -> . DECREASE LPAREN ID COMMA sentence RPAREN SEMICOLON
    (39) diagonal_right -> . DIAGR LPAREN sentence RPAREN SEMICOLON
    (38) diagonal_left -> . DIAGL LPAREN sentence RPAREN SEMICOLON
    (60) procedure -> . PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON
    (40) empty -> .

    INCASE          shift and go to state 6
    REPEAT          shift and go to state 19
    FROM            shift and go to state 25
    DOT             shift and go to state 11
    INITIALIZE      shift and go to state 4
    FILL            shift and go to state 7
    INCREASE        shift and go to state 23
    DECREASE        shift and go to state 18
    DIAGR           shift and go to state 22
    DIAGL           shift and go to state 5
    PROCEDURE       shift and go to state 15
    END             reduce using rule 40 (empty -> .)

    decrease                       shift and go to state 172
    diagonal_right                 shift and go to state 169
    inCase                         shift and go to state 179
    empty                          shift and go to state 170
    diagonal_left                  shift and go to state 171
    fill                           shift and go to state 178
    repeat                         shift and go to state 180
    procedure                      shift and go to state 177
    dot                            shift and go to state 173
    increase                       shift and go to state 174
    initialize                     shift and go to state 181
    localExpression                shift and go to state 197
    since                          shift and go to state 176

state 182

    (42) localDeclare -> DECLARE ID DEFAULT NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 198


state 183

    (30) since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .

    INCASE          reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    REPEAT          reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    FROM            reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    DOT             reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    INITIALIZE      reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    FILL            reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    INCREASE        reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    DECREASE        reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    DIAGR           reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    DIAGL           reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    PROCEDURE       reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    END             reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    DECLARE         reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    CALL            reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    $end            reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    TOFIND          reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    RBRACKET        reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)
    ENDFROM         reduce using rule 30 (since -> FROM declare UNTIL CONDITION sentence DO expression ENDFROM SEMICOLON .)


state 184

    (19) when1 -> WHEN ID CONDITION sentence_when1 THEN LBRACKET expression RBRACKET when1 .

    IFNOT           reduce using rule 19 (when1 -> WHEN ID CONDITION sentence_when1 THEN LBRACKET expression RBRACKET when1 .)


state 185

    (21) when2 -> WHEN CONDITION sentence THEN LBRACKET expression RBRACKET when2 .

    IFNOT           reduce using rule 21 (when2 -> WHEN CONDITION sentence THEN LBRACKET expression RBRACKET when2 .)


state 186

    (51) localExpression -> diagonal_right localExpression .

    END             reduce using rule 51 (localExpression -> diagonal_right localExpression .)


state 187

    (52) localExpression -> diagonal_left localExpression .

    END             reduce using rule 52 (localExpression -> diagonal_left localExpression .)


state 188

    (50) localExpression -> decrease localExpression .

    END             reduce using rule 50 (localExpression -> decrease localExpression .)


state 189

    (46) localExpression -> dot localExpression .

    END             reduce using rule 46 (localExpression -> dot localExpression .)


state 190

    (49) localExpression -> increase localExpression .

    END             reduce using rule 49 (localExpression -> increase localExpression .)


state 191

    (60) procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END . SEMICOLON

    SEMICOLON       shift and go to state 199


state 192

    (45) localExpression -> since localExpression .

    END             reduce using rule 45 (localExpression -> since localExpression .)


state 193

    (53) localExpression -> procedure localExpression .

    END             reduce using rule 53 (localExpression -> procedure localExpression .)


state 194

    (48) localExpression -> fill localExpression .

    END             reduce using rule 48 (localExpression -> fill localExpression .)


state 195

    (43) localExpression -> inCase localExpression .

    END             reduce using rule 43 (localExpression -> inCase localExpression .)


state 196

    (44) localExpression -> repeat localExpression .

    END             reduce using rule 44 (localExpression -> repeat localExpression .)


state 197

    (47) localExpression -> initialize localExpression .

    END             reduce using rule 47 (localExpression -> initialize localExpression .)


state 198

    (42) localDeclare -> DECLARE ID DEFAULT NUMBER SEMICOLON .

    START           reduce using rule 42 (localDeclare -> DECLARE ID DEFAULT NUMBER SEMICOLON .)


state 199

    (60) procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .

    DECLARE         reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    INCASE          reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    REPEAT          reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    FROM            reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    DOT             reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    INITIALIZE      reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    FILL            reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    INCREASE        reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    DECREASE        reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    DIAGR           reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    DIAGL           reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    PROCEDURE       reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    CALL            reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    $end            reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    TOFIND          reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    RBRACKET        reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    ENDFROM         reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)
    END             reduce using rule 60 (procedure -> PROCEDURE ID LPAREN params RPAREN localDeclare START COLON localExpression END SEMICOLON .)

